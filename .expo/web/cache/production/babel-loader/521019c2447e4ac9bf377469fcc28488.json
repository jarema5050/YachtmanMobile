{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import{CommonActions}from'@react-navigation/routers';import EnsureSingleNavigator from\"./EnsureSingleNavigator\";import NavigationBuilderContext from\"./NavigationBuilderContext\";import NavigationStateContext from\"./NavigationStateContext\";import UnhandledActionContext from\"./UnhandledActionContext\";import{ScheduleUpdateContext}from\"./useScheduleUpdate\";import useFocusedListeners from\"./useFocusedListeners\";import useStateGetters from\"./useStateGetters\";import useOptionsGetters from\"./useOptionsGetters\";import useEventEmitter from\"./useEventEmitter\";import useSyncState from\"./useSyncState\";import isSerializable from\"./isSerializable\";var NOT_INITIALIZED_ERROR=\"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";var hasWarnedForSerialization=false;Object.defineProperty(global,'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',{set:function set(_){console.warn(\"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\");}});var getPartialState=function getPartialState(state){if(state===undefined){return;}var key=state.key,routeNames=state.routeNames,partialState=_objectWithoutProperties(state,[\"key\",\"routeNames\"]);return _objectSpread(_objectSpread({},partialState),{},{stale:true,routes:state.routes.map(function(route){if(route.state===undefined){return route;}return _objectSpread(_objectSpread({},route),{},{state:getPartialState(route.state)});})});};var BaseNavigationContainer=React.forwardRef(function BaseNavigationContainer(_ref,ref){var initialState=_ref.initialState,onStateChange=_ref.onStateChange,independent=_ref.independent,children=_ref.children;var parent=React.useContext(NavigationStateContext);if(!parent.isDefault&&!independent){throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");}var _useSyncState=useSyncState(function(){return getPartialState(initialState==null?undefined:initialState);}),_useSyncState2=_slicedToArray(_useSyncState,5),state=_useSyncState2[0],getState=_useSyncState2[1],setState=_useSyncState2[2],scheduleUpdate=_useSyncState2[3],flushUpdates=_useSyncState2[4];var isFirstMountRef=React.useRef(true);var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var _useFocusedListeners=useFocusedListeners(),listeners=_useFocusedListeners.listeners,addFocusedListener=_useFocusedListeners.addListener;var _useStateGetters=useStateGetters(),getStateForRoute=_useStateGetters.getStateForRoute,addStateGetter=_useStateGetters.addStateGetter;var dispatch=function dispatch(action){if(listeners[0]==null){throw new Error(NOT_INITIALIZED_ERROR);}listeners[0](function(navigation){return navigation.dispatch(action);});};var canGoBack=function canGoBack(){if(listeners[0]==null){return false;}var _listeners$=listeners[0](function(navigation){return navigation.canGoBack();}),result=_listeners$.result,handled=_listeners$.handled;if(handled){return result;}else{return false;}};var resetRoot=React.useCallback(function(state){setState(state);},[setState]);var getRootState=React.useCallback(function(){return getStateForRoute('root');},[getStateForRoute]);var getCurrentRoute=React.useCallback(function(){var state=getRootState();if(state===undefined){return undefined;}while(state.routes[state.index].state!==undefined){state=state.routes[state.index].state;}return state.routes[state.index];},[getRootState]);var emitter=useEventEmitter();var _useOptionsGetters=useOptionsGetters({}),addOptionsGetter=_useOptionsGetters.addOptionsGetter,getCurrentOptions=_useOptionsGetters.getCurrentOptions;React.useImperativeHandle(ref,function(){return _objectSpread(_objectSpread(_objectSpread({},Object.keys(CommonActions).reduce(function(acc,name){acc[name]=function(){return dispatch(CommonActions[name].apply(CommonActions,arguments));};return acc;},{})),emitter.create('root')),{},{resetRoot:resetRoot,dispatch:dispatch,canGoBack:canGoBack,getRootState:getRootState,dangerouslyGetState:function dangerouslyGetState(){return state;},dangerouslyGetParent:function dangerouslyGetParent(){return undefined;},getCurrentRoute:getCurrentRoute,getCurrentOptions:getCurrentOptions});});var onDispatchAction=React.useCallback(function(action,noop){emitter.emit({type:'__unsafe_action__',data:{action:action,noop:noop}});},[emitter]);var onOptionsChange=React.useCallback(function(options){emitter.emit({type:'options',data:{options:options}});},[emitter]);var builderContext=React.useMemo(function(){return{addFocusedListener:addFocusedListener,addStateGetter:addStateGetter,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange};},[addFocusedListener,addStateGetter,onDispatchAction,onOptionsChange]);var scheduleContext=React.useMemo(function(){return{scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates};},[scheduleUpdate,flushUpdates]);var context=React.useMemo(function(){return{state:state,getState:getState,setState:setState,getKey:getKey,setKey:setKey,addOptionsGetter:addOptionsGetter};},[getKey,getState,setKey,setState,state,addOptionsGetter]);var onStateChangeRef=React.useRef(onStateChange);React.useEffect(function(){onStateChangeRef.current=onStateChange;});React.useEffect(function(){if(process.env.NODE_ENV!=='production'){if(state!==undefined&&!isSerializable(state)&&!hasWarnedForSerialization){hasWarnedForSerialization=true;console.warn(\"Non-serializable values were found in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\");}}emitter.emit({type:'state',data:{state:state}});if(!isFirstMountRef.current&&onStateChangeRef.current){onStateChangeRef.current(getRootState());}isFirstMountRef.current=false;},[getRootState,emitter,state]);var onUnhandledAction=React.useCallback(function(action){if(process.env.NODE_ENV==='production'){return;}var payload=action.payload;var message=\"The action '\".concat(action.type,\"'\").concat(payload?\" with payload \".concat(JSON.stringify(action.payload)):'',\" was not handled by any navigator.\");switch(action.type){case'NAVIGATE':case'PUSH':case'REPLACE':case'JUMP_TO':if(payload===null||payload===void 0?void 0:payload.name){message+=\"\\n\\nDo you have a screen named '\".concat(payload.name,\"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\");}else{message+=\"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";}break;case'GO_BACK':case'POP':case'POP_TO_TOP':message+=\"\\n\\nIs there any screen to go back to?\";break;case'OPEN_DRAWER':case'CLOSE_DRAWER':case'TOGGLE_DRAWER':message+=\"\\n\\nIs your screen inside a Drawer navigator?\";break;}message+=\"\\n\\nThis is a development-only warning and won't be shown in production.\";console.error(message);},[]);return React.createElement(ScheduleUpdateContext.Provider,{value:scheduleContext},React.createElement(NavigationBuilderContext.Provider,{value:builderContext},React.createElement(NavigationStateContext.Provider,{value:context},React.createElement(UnhandledActionContext.Provider,{value:onUnhandledAction},React.createElement(EnsureSingleNavigator,null,children)))));});export default BaseNavigationContainer;","map":{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["NOT_INITIALIZED_ERROR","hasWarnedForSerialization","Object","set","console","getPartialState","state","routeNames","stale","routes","route","BaseNavigationContainer","children","parent","React","useSyncState","initialState","isFirstMountRef","navigatorKeyRef","getKey","setKey","key","addListener","addFocusedListener","useFocusedListeners","addStateGetter","useStateGetters","dispatch","action","listeners","navigation","canGoBack","handled","resetRoot","setState","getRootState","getStateForRoute","getCurrentRoute","emitter","useEventEmitter","getCurrentOptions","useOptionsGetters","acc","dangerouslyGetState","dangerouslyGetParent","onDispatchAction","type","data","noop","onOptionsChange","options","builderContext","scheduleContext","scheduleUpdate","flushUpdates","context","getState","addOptionsGetter","onStateChangeRef","process","isSerializable","onUnhandledAction","payload","message","JSON"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useFocusedListeners from './useFocusedListeners';\nimport useStateGetters from './useStateGetters';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport isSerializable from './isSerializable';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst NOT_INITIALIZED_ERROR =\n  \"The 'navigation' object hasn't been initialized yet. This might happen if you don't have a navigator mounted, or if the navigator hasn't finished mounting. See https://reactnavigation.org/docs/navigating-without-navigation-prop#handling-initialization for more details.\";\n\nlet hasWarnedForSerialization = false;\n\n/**\n * Migration instructions for removal of devtools from core\n */\nObject.defineProperty(\n  global,\n  'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n  {\n    set(_) {\n      console.warn(\n        \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\"\n      );\n    },\n  }\n);\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitely. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const {\n      listeners,\n      addListener: addFocusedListener,\n    } = useFocusedListeners();\n\n    const { getStateForRoute, addStateGetter } = useStateGetters();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners[0] == null) {\n        throw new Error(NOT_INITIALIZED_ERROR);\n      }\n\n      listeners[0]((navigation) => navigation.dispatch(action));\n    };\n\n    const canGoBack = () => {\n      if (listeners[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        setState(state);\n      },\n      [setState]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return getStateForRoute('root');\n    }, [getStateForRoute]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      let state = getRootState();\n      if (state === undefined) {\n        return undefined;\n      }\n      while (state.routes[state.index].state !== undefined) {\n        state = state.routes[state.index].state as NavigationState;\n      }\n      return state.routes[state.index];\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...(Object.keys(CommonActions) as (keyof typeof CommonActions)[]).reduce<\n        any\n      >((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          dispatch(\n            CommonActions[name](\n              // @ts-expect-error: we can't know the type statically\n              ...args\n            )\n          );\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      dangerouslyGetState: () => state,\n      dangerouslyGetParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addFocusedListener,\n        addStateGetter,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addFocusedListener, addStateGetter, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        addOptionsGetter,\n      }),\n      [getKey, getState, setKey, setState, state, addOptionsGetter]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          state !== undefined &&\n          !isSerializable(state) &&\n          !hasWarnedForSerialization\n        ) {\n          hasWarnedForSerialization = true;\n\n          console.warn(\n            \"Non-serializable values were found in the navigation state, which can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\"\n          );\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(getRootState());\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const onUnhandledAction = React.useCallback((action: NavigationAction) => {\n      if (process.env.NODE_ENV === 'production') {\n        return;\n      }\n\n      const payload: Record<string, any> | undefined = action.payload;\n\n      let message = `The action '${action.type}'${\n        payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n      } was not handled by any navigator.`;\n\n      switch (action.type) {\n        case 'NAVIGATE':\n        case 'PUSH':\n        case 'REPLACE':\n        case 'JUMP_TO':\n          if (payload?.name) {\n            message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n          } else {\n            message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n          }\n\n          break;\n        case 'GO_BACK':\n        case 'POP':\n        case 'POP_TO_TOP':\n          message += `\\n\\nIs there any screen to go back to?`;\n          break;\n        case 'OPEN_DRAWER':\n        case 'CLOSE_DRAWER':\n        case 'TOGGLE_DRAWER':\n          message += `\\n\\nIs your screen inside a Drawer navigator?`;\n          break;\n      }\n\n      message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n      console.error(message);\n    }, []);\n\n    return (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider value={onUnhandledAction}>\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n  }\n);\n\nexport default BaseNavigationContainer;\n"]},"metadata":{},"sourceType":"module"}