{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import AsyncStorage from'@react-native-community/async-storage';import BottomTabNav from\"./BottomTabNav\";import IntroView from\"../views/IntroductionView\";import{NavigationContainer}from'@react-navigation/native';import LoginContext from\"../Contexts/LoginContext\";function homeStack(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showIntro=_useState2[0],setShowIntro=_useState2[1];function changeView(){var getJwt=function getJwt(){var jsonValue;return _regeneratorRuntime.async(function getJwt$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('@auth_token'));case 3:jsonValue=_context.sent;return _context.abrupt(\"return\",jsonValue);case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);};getJwt().then(function(result){if(result==null)setShowIntro(true);else setShowIntro(false);});}function logoutEffect(){return _regeneratorRuntime.async(function logoutEffect$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setShowIntro(true);_context2.prev=1;_context2.next=4;return _regeneratorRuntime.awrap(AsyncStorage.removeItem('@auth_token'));case 4:return _context2.abrupt(\"return\",true);case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](1);case 9:case\"end\":return _context2.stop();}}},null,null,[[1,7]],Promise);}if(showIntro)return React.createElement(IntroView,{task:changeView});else return React.createElement(LoginContext.Provider,{value:{logoutFunc:logoutEffect}},React.createElement(NavigationContainer,null,React.createElement(BottomTabNav,null)));}export default homeStack;","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/components/homeStack.js"],"names":["React","useState","AsyncStorage","BottomTabNav","IntroView","NavigationContainer","LoginContext","homeStack","showIntro","setShowIntro","changeView","getJwt","getItem","jsonValue","then","result","logoutEffect","removeItem","logoutFunc"],"mappings":"6HACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,YAAP,KAAyB,uCAAzB,CACA,MAAOC,CAAAA,YAAP,sBACA,MAAOC,CAAAA,SAAP,iCACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,YAAP,gCACA,QAASC,CAAAA,SAAT,EAAoB,eAEkBN,QAAQ,CAAC,IAAD,CAF1B,wCAETO,SAFS,eAEEC,YAFF,eAGhB,QAASC,CAAAA,UAAT,EAAqB,CACjB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,kMAEeT,YAAY,CAACU,OAAb,CAAqB,aAArB,CAFf,SAEHC,SAFG,+CAGFA,SAHE,kIAAf,CASAF,MAAM,GAAGG,IAAT,CAAc,SAACC,MAAD,CAAY,CACtB,GAAGA,MAAM,EAAI,IAAb,CACIN,YAAY,CAAC,IAAD,CAAZ,CADJ,IAGIA,CAAAA,YAAY,CAAC,KAAD,CAAZ,CACP,CALD,EAMH,CACD,QAAeO,CAAAA,YAAf,4HACEP,YAAY,CAAC,IAAD,CAAZ,CADF,mEAGUP,YAAY,CAACe,UAAb,CAAwB,aAAxB,CAHV,0CAIW,IAJX,sIAYA,GAAGT,SAAH,CACI,MAAO,qBAAC,SAAD,EAAW,IAAI,CAAEE,UAAjB,EAAP,CADJ,IAGG,OACC,qBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAACQ,UAAU,CAAEF,YAAb,CAA9B,EACE,oBAAC,mBAAD,MACI,oBAAC,YAAD,MADJ,CADF,CADD,CAON,CAED,cAAeT,CAAAA,SAAf","sourcesContent":["\nimport React, {useState} from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport BottomTabNav from './BottomTabNav';\nimport IntroView from '../views/IntroductionView';\nimport { NavigationContainer } from '@react-navigation/native';\nimport LoginContext from '../Contexts/LoginContext'\nfunction homeStack(){\n\n    const [showIntro, setShowIntro] = useState(true);\n    function changeView(){\n        const getJwt = async () => {\n            try {\n              const jsonValue = await AsyncStorage.getItem('@auth_token')\n              return jsonValue\n            } catch(e) {\n              // error reading value\n            }\n          }\n    \n        getJwt().then((result) => {\n            if(result == null)\n                setShowIntro(true);\n            else\n                setShowIntro(false);\n        })\n    }\n    async function logoutEffect(){\n      setShowIntro(true);\n      try {\n        await AsyncStorage.removeItem('@auth_token')\n        return true\n      } catch(e) {\n        // error reading value\n      }\n    }\n    //const LoginContext = React.createContext(defaultValue);\n    \n    \n    if(showIntro)\n        return(<IntroView task={changeView}></IntroView>);\n    else\n       return(\n        <LoginContext.Provider value={{logoutFunc: logoutEffect}}>\n          <NavigationContainer>\n              <BottomTabNav></BottomTabNav>\n            </NavigationContainer>\n        </LoginContext.Provider>\n        );\n}\n\nexport default homeStack;"]},"metadata":{},"sourceType":"module"}