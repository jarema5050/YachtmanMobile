{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Button from\"react-native-web/dist/exports/Button\";import Alert from\"react-native-web/dist/exports/Alert\";import{AsyncStorage}from\"react-native-web/dist/index\";import auth0 from\"../services/Auth0\";var credentialsModule=require(\"../services/AuthCredentials\");var auth=auth0.auth;var changePassword=function changePassword(userData){return _regeneratorRuntime.async(function changePassword$(_context){while(1){switch(_context.prev=_context.next){case 0:try{if(userData!=null){auth.resetPassword({connection:userData.connection,email:userData.email},function(err,resp){if(err){console.log(err.message);}else{console.log(resp);}});}}catch(err){console.log(err.message);}case 1:case\"end\":return _context.stop();}}},null,null,null,Promise);};var alertPasswordReset=function alertPasswordReset(){return Alert.alert(\"Reset password\",\"Your password will be deleted and you will receive an email with link to password change form.\",[{text:\"Cancel\",onPress:function onPress(){return console.log(\"Cancel Pressed\");},style:\"cancel\"},{text:\"Reset my password\",onPress:function onPress(){return changePassword();}}],{cancelable:false});};export default alertPasswordReset;","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/components/ChangePassword.js"],"names":["React","useState","AsyncStorage","auth0","credentialsModule","require","auth","changePassword","userData","resetPassword","connection","email","err","resp","console","log","message","alertPasswordReset","Alert","alert","text","onPress","style","cancelable"],"mappings":"4DAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,6OAESC,Y,mCACT,MAAOC,CAAAA,KAAP,yBAEA,GAAMC,CAAAA,iBAAiB,CAAGC,OAAO,+BAAjC,CACA,GAAMC,CAAAA,IAAI,CAAGH,KAAK,CAACG,IAAnB,CACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAOC,QAAP,0HACnB,GAAG,CACD,GAAGA,QAAQ,EAAI,IAAf,CAAoB,CAClBF,IAAI,CAACG,aAAL,CAAmB,CACfC,UAAU,CAAEF,QAAQ,CAACE,UADN,CAEfC,KAAK,CAAIH,QAAQ,CAACG,KAFH,CAAnB,CAGK,SAAUC,GAAV,CAAeC,IAAf,CAAqB,CACtB,GAAGD,GAAH,CAAO,CACLE,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB,EACD,CAFD,IAEK,CACHF,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACD,CACF,CATH,EAUD,CACF,CACD,MAAMD,GAAN,CACA,CACIE,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB,EACH,CAlBkB,qEAAvB,CAqBA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SACvBC,CAAAA,KAAK,CAACC,KAAN,CACE,gBADF,CAEE,gGAFF,CAGE,CACE,CACEC,IAAI,CAAE,QADR,CAEEC,OAAO,CAAE,yBAAMP,CAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN,EAFX,CAGEO,KAAK,CAAE,QAHT,CADF,CAME,CAAEF,IAAI,CAAE,mBAAR,CAA6BC,OAAO,CAAE,yBAAMd,CAAAA,cAAc,EAApB,EAAtC,CANF,CAHF,CAWE,CAAEgB,UAAU,CAAE,KAAd,CAXF,CADuB,EAA3B,CAcA,cAAeN,CAAAA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Button, Alert } from \"react-native\";\nimport { AsyncStorage } from 'react-native';\nimport auth0 from '../services/Auth0'\n\nconst credentialsModule = require('../services/AuthCredentials');\nconst auth = auth0.auth;\nconst changePassword = async (userData) => {\n    try{\n      if(userData != null){\n        auth.resetPassword({\n            connection: userData.connection,\n            email:   userData.email\n          }, function (err, resp) {\n            if(err){\n              console.log(err.message);\n            }else{\n              console.log(resp);\n            }\n          });\n      }\n    }\n    catch(err)\n    {\n        console.log(err.message)\n    }\n}\n\nconst alertPasswordReset = () =>\n    Alert.alert(\n      \"Reset password\",\n      \"Your password will be deleted and you will receive an email with link to password change form.\",\n      [\n        {\n          text: \"Cancel\",\n          onPress: () => console.log(\"Cancel Pressed\"),\n          style: \"cancel\"\n        },\n        { text: \"Reset my password\", onPress: () => changePassword() }\n      ],\n      { cancelable: false }\n    );\nexport default alertPasswordReset;"]},"metadata":{},"sourceType":"module"}