{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import PropTypes from'prop-types';import Platform from\"react-native-web/dist/exports/Platform\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableNativeFeedback from\"react-native-web/dist/exports/TouchableNativeFeedback\";import Color from'color';import getIconType from\"../helpers/getIconType\";import{withTheme}from\"../config\";var Icon=function Icon(props){var type=props.type,name=props.name,size=props.size,color=props.color,iconStyle=props.iconStyle,underlayColor=props.underlayColor,reverse=props.reverse,raised=props.raised,containerStyle=props.containerStyle,reverseColor=props.reverseColor,disabled=props.disabled,disabledStyle=props.disabledStyle,onPress=props.onPress,_props$Component=props.Component,Component=_props$Component===void 0?onPress?Platform.select({android:TouchableNativeFeedback,default:TouchableHighlight}):View:_props$Component,solid=props.solid,brand=props.brand,attributes=_objectWithoutProperties(props,[\"type\",\"name\",\"size\",\"color\",\"iconStyle\",\"underlayColor\",\"reverse\",\"raised\",\"containerStyle\",\"reverseColor\",\"disabled\",\"disabledStyle\",\"onPress\",\"Component\",\"solid\",\"brand\"]);var IconComponent=getIconType(type);var getBackgroundColor=function getBackgroundColor(){if(reverse){return color;}return raised?'white':'transparent';};var buttonStyles={borderRadius:size+4,height:size*2+4,width:size*2+4};if(Platform.OS==='android'&&!attributes.background){if(Platform.Version>=21){attributes.background=TouchableNativeFeedback.Ripple(Color(color).alpha(0.2).rgb().string(),true);}}return React.createElement(View,{style:StyleSheet.flatten([styles.container,(reverse||raised)&&styles.button,(reverse||raised)&&buttonStyles,raised&&styles.raised,iconStyle&&iconStyle.borderRadius?{borderRadius:iconStyle.borderRadius}:{},containerStyle&&containerStyle])},React.createElement(Component,_extends({},attributes,onPress&&{onPress:onPress,disabled:disabled,underlayColor:reverse?color:underlayColor,activeOpacity:0.3}),React.createElement(View,{style:StyleSheet.flatten([(reverse||raised)&&buttonStyles,{backgroundColor:getBackgroundColor(),alignItems:'center',justifyContent:'center'},disabled&&styles.disabled,disabled&&disabledStyle])},React.createElement(IconComponent,{testID:\"iconIcon\",style:StyleSheet.flatten([{backgroundColor:'transparent'},iconStyle&&iconStyle]),size:size,name:name,color:reverse?reverseColor:color,solid:solid,brand:brand}))));};Icon.propTypes={type:PropTypes.string,name:PropTypes.string,size:PropTypes.number,color:PropTypes.string,Component:PropTypes.elementType,underlayColor:PropTypes.string,reverse:PropTypes.bool,raised:PropTypes.bool,containerStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),iconStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),onPress:PropTypes.func,reverseColor:PropTypes.string,disabled:PropTypes.bool,disabledStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),solid:PropTypes.bool,brand:PropTypes.bool};Icon.defaultProps={underlayColor:'transparent',reverse:false,raised:false,size:24,color:'black',reverseColor:'white',disabled:false,type:'material',solid:false,brand:false};var styles=StyleSheet.create({container:{overflow:'hidden'},button:{margin:7},raised:_objectSpread({},Platform.select({android:{elevation:2},default:{shadowColor:'rgba(0,0,0, .4)',shadowOffset:{height:1,width:1},shadowOpacity:1,shadowRadius:1}})),disabled:{backgroundColor:'#D1D5D8'}});export{Icon};export default withTheme(Icon,'Icon');","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/node_modules/react-native-elements/src/icons/Icon.js"],"names":["React","PropTypes","Color","getIconType","withTheme","Icon","props","type","name","size","color","iconStyle","underlayColor","reverse","raised","containerStyle","reverseColor","disabled","disabledStyle","onPress","Component","Platform","select","android","TouchableNativeFeedback","default","TouchableHighlight","View","solid","brand","attributes","IconComponent","getBackgroundColor","buttonStyles","borderRadius","height","width","OS","background","Version","Ripple","alpha","rgb","string","StyleSheet","flatten","styles","container","button","activeOpacity","backgroundColor","alignItems","justifyContent","propTypes","number","elementType","bool","oneOfType","object","array","func","defaultProps","create","overflow","margin","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"y+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,+VAQA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,WAAP,8BACA,OAASC,SAAT,iBAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,KAAK,CAAI,IAElBC,CAAAA,IAFkB,CAwBhBD,KAxBgB,CAElBC,IAFkB,CAGlBC,IAHkB,CAwBhBF,KAxBgB,CAGlBE,IAHkB,CAIlBC,IAJkB,CAwBhBH,KAxBgB,CAIlBG,IAJkB,CAKlBC,KALkB,CAwBhBJ,KAxBgB,CAKlBI,KALkB,CAMlBC,SANkB,CAwBhBL,KAxBgB,CAMlBK,SANkB,CAOlBC,aAPkB,CAwBhBN,KAxBgB,CAOlBM,aAPkB,CAQlBC,OARkB,CAwBhBP,KAxBgB,CAQlBO,OARkB,CASlBC,MATkB,CAwBhBR,KAxBgB,CASlBQ,MATkB,CAUlBC,cAVkB,CAwBhBT,KAxBgB,CAUlBS,cAVkB,CAWlBC,YAXkB,CAwBhBV,KAxBgB,CAWlBU,YAXkB,CAYlBC,QAZkB,CAwBhBX,KAxBgB,CAYlBW,QAZkB,CAalBC,aAbkB,CAwBhBZ,KAxBgB,CAalBY,aAbkB,CAclBC,OAdkB,CAwBhBb,KAxBgB,CAclBa,OAdkB,kBAwBhBb,KAxBgB,CAelBc,SAfkB,CAelBA,SAfkB,2BAeND,OAAO,CACfE,QAAQ,CAACC,MAAT,CAAgB,CACdC,OAAO,CAAEC,uBADK,CAEdC,OAAO,CAAEC,kBAFK,CAAhB,CADe,CAKfC,IApBc,kBAqBlBC,KArBkB,CAwBhBtB,KAxBgB,CAqBlBsB,KArBkB,CAsBlBC,KAtBkB,CAwBhBvB,KAxBgB,CAsBlBuB,KAtBkB,CAuBfC,UAvBe,0BAwBhBxB,KAxBgB,iLA0BpB,GAAMyB,CAAAA,aAAa,CAAG5B,WAAW,CAACI,IAAD,CAAjC,CACA,GAAMyB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAInB,OAAJ,CAAa,CACX,MAAOH,CAAAA,KAAP,CACD,CAED,MAAOI,CAAAA,MAAM,CAAG,OAAH,CAAa,aAA1B,CACD,CAND,CAQA,GAAMmB,CAAAA,YAAY,CAAG,CACnBC,YAAY,CAAEzB,IAAI,CAAG,CADF,CAEnB0B,MAAM,CAAE1B,IAAI,CAAG,CAAP,CAAW,CAFA,CAGnB2B,KAAK,CAAE3B,IAAI,CAAG,CAAP,CAAW,CAHC,CAArB,CAMA,GAAIY,QAAQ,CAACgB,EAAT,GAAgB,SAAhB,EAA6B,CAACP,UAAU,CAACQ,UAA7C,CAAyD,CACvD,GAAIjB,QAAQ,CAACkB,OAAT,EAAoB,EAAxB,CAA4B,CAC1BT,UAAU,CAACQ,UAAX,CAAwBd,uBAAuB,CAACgB,MAAxB,CACtBtC,KAAK,CAACQ,KAAD,CAAL,CACG+B,KADH,CACS,GADT,EAEGC,GAFH,GAGGC,MAHH,EADsB,CAKtB,IALsB,CAAxB,CAOD,CACF,CAED,MACE,qBAAC,IAAD,EACE,KAAK,CAAEC,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACC,SADiB,CAExB,CAAClC,OAAO,EAAIC,MAAZ,GAAuBgC,MAAM,CAACE,MAFN,CAGxB,CAACnC,OAAO,EAAIC,MAAZ,GAAuBmB,YAHC,CAIxBnB,MAAM,EAAIgC,MAAM,CAAChC,MAJO,CAKxBH,SAAS,EAAIA,SAAS,CAACuB,YAAvB,CACI,CACEA,YAAY,CAAEvB,SAAS,CAACuB,YAD1B,CADJ,CAII,EAToB,CAUxBnB,cAAc,EAAIA,cAVM,CAAnB,CADT,EAcE,oBAAC,SAAD,aACMe,UADN,CAEMX,OAAO,EAAI,CACbA,OAAO,CAAPA,OADa,CAEbF,QAAQ,CAARA,QAFa,CAGbL,aAAa,CAAEC,OAAO,CAAGH,KAAH,CAAWE,aAHpB,CAIbqC,aAAa,CAAE,GAJF,CAFjB,EASE,oBAAC,IAAD,EACE,KAAK,CAAEL,UAAU,CAACC,OAAX,CAAmB,CACxB,CAAChC,OAAO,EAAIC,MAAZ,GAAuBmB,YADC,CAExB,CACEiB,eAAe,CAAElB,kBAAkB,EADrC,CAEEmB,UAAU,CAAE,QAFd,CAGEC,cAAc,CAAE,QAHlB,CAFwB,CAOxBnC,QAAQ,EAAI6B,MAAM,CAAC7B,QAPK,CAQxBA,QAAQ,EAAIC,aARY,CAAnB,CADT,EAYE,oBAAC,aAAD,EACE,MAAM,CAAC,UADT,CAEE,KAAK,CAAE0B,UAAU,CAACC,OAAX,CAAmB,CACxB,CAAEK,eAAe,CAAE,aAAnB,CADwB,CAExBvC,SAAS,EAAIA,SAFW,CAAnB,CAFT,CAME,IAAI,CAAEF,IANR,CAOE,IAAI,CAAED,IAPR,CAQE,KAAK,CAAEK,OAAO,CAAGG,YAAH,CAAkBN,KARlC,CASE,KAAK,CAAEkB,KATT,CAUE,KAAK,CAAEC,KAVT,EAZF,CATF,CAdF,CADF,CAoDD,CAzGD,CA2GAxB,IAAI,CAACgD,SAAL,CAAiB,CACf9C,IAAI,CAAEN,SAAS,CAAC0C,MADD,CAEfnC,IAAI,CAAEP,SAAS,CAAC0C,MAFD,CAGflC,IAAI,CAAER,SAAS,CAACqD,MAHD,CAIf5C,KAAK,CAAET,SAAS,CAAC0C,MAJF,CAKfvB,SAAS,CAAEnB,SAAS,CAACsD,WALN,CAMf3C,aAAa,CAAEX,SAAS,CAAC0C,MANV,CAOf9B,OAAO,CAAEZ,SAAS,CAACuD,IAPJ,CAQf1C,MAAM,CAAEb,SAAS,CAACuD,IARH,CASfzC,cAAc,CAAEd,SAAS,CAACwD,SAAV,CAAoB,CAACxD,SAAS,CAACyD,MAAX,CAAmBzD,SAAS,CAAC0D,KAA7B,CAApB,CATD,CAUfhD,SAAS,CAAEV,SAAS,CAACwD,SAAV,CAAoB,CAACxD,SAAS,CAACyD,MAAX,CAAmBzD,SAAS,CAAC0D,KAA7B,CAApB,CAVI,CAWfxC,OAAO,CAAElB,SAAS,CAAC2D,IAXJ,CAYf5C,YAAY,CAAEf,SAAS,CAAC0C,MAZT,CAaf1B,QAAQ,CAAEhB,SAAS,CAACuD,IAbL,CAcftC,aAAa,CAAEjB,SAAS,CAACwD,SAAV,CAAoB,CAACxD,SAAS,CAACyD,MAAX,CAAmBzD,SAAS,CAAC0D,KAA7B,CAApB,CAdA,CAef/B,KAAK,CAAE3B,SAAS,CAACuD,IAfF,CAgBf3B,KAAK,CAAE5B,SAAS,CAACuD,IAhBF,CAAjB,CAmBAnD,IAAI,CAACwD,YAAL,CAAoB,CAClBjD,aAAa,CAAE,aADG,CAElBC,OAAO,CAAE,KAFS,CAGlBC,MAAM,CAAE,KAHU,CAIlBL,IAAI,CAAE,EAJY,CAKlBC,KAAK,CAAE,OALW,CAMlBM,YAAY,CAAE,OANI,CAOlBC,QAAQ,CAAE,KAPQ,CAQlBV,IAAI,CAAE,UARY,CASlBqB,KAAK,CAAE,KATW,CAUlBC,KAAK,CAAE,KAVW,CAApB,CAaA,GAAMiB,CAAAA,MAAM,CAAGF,UAAU,CAACkB,MAAX,CAAkB,CAC/Bf,SAAS,CAAE,CACTgB,QAAQ,CAAE,QADD,CADoB,CAI/Bf,MAAM,CAAE,CACNgB,MAAM,CAAE,CADF,CAJuB,CAO/BlD,MAAM,kBACDO,QAAQ,CAACC,MAAT,CAAgB,CACjBC,OAAO,CAAE,CACP0C,SAAS,CAAE,CADJ,CADQ,CAIjBxC,OAAO,CAAE,CACPyC,WAAW,CAAE,iBADN,CAEPC,YAAY,CAAE,CAAEhC,MAAM,CAAE,CAAV,CAAaC,KAAK,CAAE,CAApB,CAFP,CAGPgC,aAAa,CAAE,CAHR,CAIPC,YAAY,CAAE,CAJP,CAJQ,CAAhB,CADC,CAPyB,CAoB/BpD,QAAQ,CAAE,CACRiC,eAAe,CAAE,SADT,CApBqB,CAAlB,CAAf,CAyBA,OAAS7C,IAAT,EACA,cAAeD,CAAAA,SAAS,CAACC,IAAD,CAAO,MAAP,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  TouchableNativeFeedback,\n} from 'react-native';\nimport Color from 'color';\n\nimport getIconType from '../helpers/getIconType';\nimport { withTheme } from '../config';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    disabled,\n    disabledStyle,\n    onPress,\n    Component = onPress\n      ? Platform.select({\n          android: TouchableNativeFeedback,\n          default: TouchableHighlight,\n        })\n      : View,\n    solid,\n    brand,\n    ...attributes\n  } = props;\n\n  const IconComponent = getIconType(type);\n  const getBackgroundColor = () => {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? 'white' : 'transparent';\n  };\n\n  const buttonStyles = {\n    borderRadius: size + 4,\n    height: size * 2 + 4,\n    width: size * 2 + 4,\n  };\n\n  if (Platform.OS === 'android' && !attributes.background) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple(\n        Color(color)\n          .alpha(0.2)\n          .rgb()\n          .string(),\n        true\n      );\n    }\n  }\n\n  return (\n    <View\n      style={StyleSheet.flatten([\n        styles.container,\n        (reverse || raised) && styles.button,\n        (reverse || raised) && buttonStyles,\n        raised && styles.raised,\n        iconStyle && iconStyle.borderRadius\n          ? {\n              borderRadius: iconStyle.borderRadius,\n            }\n          : {},\n        containerStyle && containerStyle,\n      ])}\n    >\n      <Component\n        {...attributes}\n        {...onPress && {\n          onPress,\n          disabled,\n          underlayColor: reverse ? color : underlayColor,\n          activeOpacity: 0.3,\n        }}\n      >\n        <View\n          style={StyleSheet.flatten([\n            (reverse || raised) && buttonStyles,\n            {\n              backgroundColor: getBackgroundColor(),\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n            disabled && styles.disabled,\n            disabled && disabledStyle,\n          ])}\n        >\n          <IconComponent\n            testID=\"iconIcon\"\n            style={StyleSheet.flatten([\n              { backgroundColor: 'transparent' },\n              iconStyle && iconStyle,\n            ])}\n            size={size}\n            name={name}\n            color={reverse ? reverseColor : color}\n            solid={solid}\n            brand={brand}\n          />\n        </View>\n      </Component>\n    </View>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  solid: PropTypes.bool,\n  brand: PropTypes.bool,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'transparent',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n  disabled: false,\n  type: 'material',\n  solid: false,\n  brand: false,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  },\n  disabled: {\n    backgroundColor: '#D1D5D8',\n  },\n});\n\nexport { Icon };\nexport default withTheme(Icon, 'Icon');\n"]},"metadata":{},"sourceType":"module"}