{"ast":null,"code":"import*as React from'react';export default function useStateGetters(){var stateGetters=React.useRef({});var getStateForRoute=React.useCallback(function(routeKey){var getter=stateGetters.current[routeKey];return getter===undefined?undefined:getter();},[stateGetters]);var addStateGetter=React.useCallback(function(key,getter){stateGetters.current[key]=getter;return function(){stateGetters.current[key]=undefined;};},[]);return{getStateForRoute:getStateForRoute,addStateGetter:addStateGetter};}","map":{"version":3,"sources":["useStateGetters.tsx"],"names":["stateGetters","React","getStateForRoute","routeKey","getter","addStateGetter"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAOA,cAAe,SAAA,CAAA,eAAA,EAA2B,CACxC,GAAMA,CAAAA,YAAY,CAAGC,KAAK,CAALA,MAAAA,CAArB,EAAqBA,CAArB,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,KAAK,CAAL,WAAA,CACtBC,SAAAA,QAAD,CAAsB,CACpB,GAAMC,CAAAA,MAAM,CAAGJ,YAAY,CAAZA,OAAAA,CAAf,QAAeA,CAAf,CACA,MAAOI,CAAAA,MAAM,GAANA,SAAAA,CAAAA,SAAAA,CAAmCA,MAA1C,EAAA,CAHqB,CAAA,CAKvB,CALF,YAKE,CALuB,CAAzB,CAQA,GAAMC,CAAAA,cAAc,CAAG,KAAK,CAAL,WAAA,CACrB,SAAA,GAAA,CAAA,MAAA,CAA+C,CAC7CL,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAEA,MAAO,WAAM,CACXA,YAAY,CAAZA,OAAAA,CAAAA,GAAAA,EAAAA,SAAAA,CADF,CAAA,CAJmB,CAAA,CAAvB,EAAuB,CAAvB,CAWA,MAAO,CACLE,gBADK,CACLA,gBADK,CAELG,cAAAA,CAAAA,cAFK,CAAP,CAID","sourcesContent":["import * as React from 'react';\nimport type { NavigatorStateGetter } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\n\nexport default function useStateGetters() {\n  const stateGetters = React.useRef<\n    Record<string, NavigatorStateGetter | undefined>\n  >({});\n\n  const getStateForRoute = React.useCallback(\n    (routeKey: string) => {\n      const getter = stateGetters.current[routeKey];\n      return getter === undefined ? undefined : getter();\n    },\n    [stateGetters]\n  );\n\n  const addStateGetter = React.useCallback(\n    (key: string, getter: NavigatorStateGetter) => {\n      stateGetters.current[key] = getter;\n\n      return () => {\n        stateGetters.current[key] = undefined;\n      };\n    },\n    []\n  );\n\n  return {\n    getStateForRoute,\n    addStateGetter,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}