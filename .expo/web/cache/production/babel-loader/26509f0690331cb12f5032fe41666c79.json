{"ast":null,"code":"import React from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Controller}from'react-hook-form';var styles=StyleSheet.create({label:{color:'white',marginTop:10,marginBottom:5,marginLeft:0},labelErr:{color:'red',marginTop:10,fontSize:14},input:{backgroundColor:'white',borderColor:'#000',height:40,padding:10,borderRadius:4},inputContainer:{marginBottom:10}});export default React.forwardRef(function(props,ref){return React.createElement(View,{style:styles.inputContainer},React.createElement(Text,{style:styles.label},props.name),React.createElement(Controller,{control:props.control,onFocus:function onFocus(){ref.current.focus();},render:function render(_ref){var onChange=_ref.onChange,onBlur=_ref.onBlur,value=_ref.value;return React.createElement(TextInput,{style:styles.input,onBlur:onBlur,onChangeText:function onChangeText(value){return onChange(value);},value:value,keyboardType:\"number-pad\",ref:ref});},rules:{pattern:{value:/\\d+/,message:\"This input is number only.\"},maxLength:{value:props.maxLength,message:\"This field maximum length is \"+props.maxLength+\".\"},required:props.required?\"This field is required.\":false},name:props.name,defaultValue:\"\"}),props.errors[props.name]!=undefined&&React.createElement(Text,{style:styles.labelErr},props.errors[props.name].message));});","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/NumericInput.js"],"names":["React","Controller","styles","StyleSheet","create","label","color","marginTop","marginBottom","marginLeft","labelErr","fontSize","input","backgroundColor","borderColor","height","padding","borderRadius","inputContainer","forwardRef","props","ref","name","control","current","focus","onChange","onBlur","value","pattern","message","maxLength","required","errors","undefined"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,0OAEA,OAASC,UAAT,KAA2B,iBAA3B,CAGA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC7BC,KAAK,CAAE,CACLC,KAAK,CAAE,OADF,CAELC,SAAS,CAAE,EAFN,CAGLC,YAAY,CAAE,CAHT,CAILC,UAAU,CAAE,CAJP,CADsB,CAO7BC,QAAQ,CAAE,CACRJ,KAAK,CAAE,KADC,CAERC,SAAS,CAAE,EAFH,CAGRI,QAAQ,CAAE,EAHF,CAPmB,CAY7BC,KAAK,CAAE,CACLC,eAAe,CAAE,OADZ,CAELC,WAAW,CAAE,MAFR,CAGLC,MAAM,CAAE,EAHH,CAILC,OAAO,CAAE,EAJJ,CAKLC,YAAY,CAAE,CALT,CAZsB,CAmB7BC,cAAc,CAAE,CACdV,YAAY,CAAE,EADA,CAnBa,CAAlB,CAAf,CAyBA,cAAeR,CAAAA,KAAK,CAACmB,UAAN,CAAiB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAC5C,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEnB,MAAM,CAACgB,cAApB,EACI,oBAAC,IAAD,EAAM,KAAK,CAAEhB,MAAM,CAACG,KAApB,EAA4Be,KAAK,CAACE,IAAlC,CADJ,CAEI,oBAAC,UAAD,EACE,OAAO,CAAEF,KAAK,CAACG,OADjB,CAEE,OAAO,CAAE,kBAAI,CAACF,GAAG,CAACG,OAAJ,CAAYC,KAAZ,GAAoB,CAFpC,CAGE,MAAM,CAAE,yBAAGC,CAAAA,QAAH,MAAGA,QAAH,CAAaC,MAAb,MAAaA,MAAb,CAAqBC,KAArB,MAAqBA,KAArB,OACN,qBAAC,SAAD,EACE,KAAK,CAAE1B,MAAM,CAACU,KADhB,CAEE,MAAM,CAAEe,MAFV,CAGE,YAAY,CAAE,sBAAAC,KAAK,QAAIF,CAAAA,QAAQ,CAACE,KAAD,CAAZ,EAHrB,CAIE,KAAK,CAAEA,KAJT,CAKE,YAAY,CAAE,YALhB,CAME,GAAG,CAAEP,GANP,EADM,EAHV,CAaE,KAAK,CAAE,CACLQ,OAAO,CAAE,CACPD,KAAK,CAAE,KADA,CAEPE,OAAO,CAAE,4BAFF,CADJ,CAKLC,SAAS,CAAE,CACTH,KAAK,CAAER,KAAK,CAACW,SADJ,CAETD,OAAO,iCAAkCV,KAAK,CAACW,SAAxC,IAFE,CALN,CASLC,QAAQ,CAAEZ,KAAK,CAACY,QAAN,CAAiB,yBAAjB,CAA6C,KATlD,CAbT,CAwBE,IAAI,CAAEZ,KAAK,CAACE,IAxBd,CAyBE,YAAY,CAAC,EAzBf,EAFJ,CA8BMF,KAAK,CAACa,MAAN,CAAab,KAAK,CAACE,IAAnB,GAA4BY,SAA5B,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEhC,MAAM,CAACQ,QAApB,EACGU,KAAK,CAACa,MAAN,CAAab,KAAK,CAACE,IAAnB,EAAyBQ,OAD5B,CA/BR,CADJ,CAuCD,CAxCY,CAAf","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, StyleSheet} from 'react-native';\nimport { Controller } from 'react-hook-form';\n\n\nconst styles = StyleSheet.create({\n    label: {\n      color: 'white',\n      marginTop: 10,\n      marginBottom: 5,\n      marginLeft: 0,\n    },\n    labelErr: {\n      color: 'red',\n      marginTop: 10,\n      fontSize: 14\n    },\n    input: {\n      backgroundColor: 'white',\n      borderColor: '#000',\n      height: 40,\n      padding: 10,\n      borderRadius: 4,\n    },\n    inputContainer: {\n      marginBottom: 10\n    }\n  });\n\n\nexport default React.forwardRef((props, ref) => {\n    return(\n        <View style={styles.inputContainer}>\n            <Text style={styles.label}>{props.name}</Text>\n            <Controller\n              control={props.control}\n              onFocus={()=>{ref.current.focus()}}\n              render={({ onChange, onBlur, value }) => (\n                <TextInput\n                  style={styles.input}\n                  onBlur={onBlur}\n                  onChangeText={value => onChange(value)}\n                  value={value}\n                  keyboardType={\"number-pad\"}\n                  ref={ref}\n                />\n              )}\n              rules={{\n                pattern: {\n                  value: /\\d+/,\n                  message: \"This input is number only.\"\n                },\n                maxLength: {\n                  value: props.maxLength,\n                  message: `This field maximum length is ${props.maxLength}.`\n                },\n                required: props.required ? \"This field is required.\" : false\n              }}\n              name={props.name}\n              defaultValue=\"\"\n            />\n            {\n              props.errors[props.name] != undefined &&\n                <Text style={styles.labelErr}>\n                  {props.errors[props.name].message}\n                </Text>\n            }\n          </View>\n\n    )\n  });"]},"metadata":{},"sourceType":"module"}