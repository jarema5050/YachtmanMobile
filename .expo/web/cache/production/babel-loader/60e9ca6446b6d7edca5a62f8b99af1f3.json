{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";var Agent=function(){function Agent(){_classCallCheck(this,Agent);}_createClass(Agent,[{key:\"show\",value:function show(url){var ephemeralSession=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var closeOnLoad=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(!NativeModules.A0Auth0){return Promise.reject(new Error('Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.'));}return new Promise(function(resolve,reject){var _NativeModules$A0Auth;var urlHandler=function urlHandler(event){NativeModules.A0Auth0.hide();Linking.removeEventListener('url',urlHandler);resolve(event.url);};var params=Platform.OS==='ios'?[ephemeralSession,closeOnLoad]:[closeOnLoad];Linking.addEventListener('url',urlHandler);(_NativeModules$A0Auth=NativeModules.A0Auth0).showUrl.apply(_NativeModules$A0Auth,[url].concat(params,[function(error,redirectURL){Linking.removeEventListener('url',urlHandler);if(error){reject(error);}else if(redirectURL){resolve(redirectURL);}else if(closeOnLoad){resolve();}}]));});}},{key:\"newTransaction\",value:function newTransaction(){if(!NativeModules.A0Auth0){return Promise.reject(new Error('Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.'));}return new Promise(function(resolve,reject){NativeModules.A0Auth0.oauthParameters(function(parameters){resolve(parameters);});});}}]);return Agent;}();export{Agent as default};","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/node_modules/react-native-auth0/src/webauth/agent.js"],"names":["Agent","url","ephemeralSession","closeOnLoad","NativeModules","A0Auth0","Promise","reject","Error","resolve","urlHandler","event","hide","Linking","removeEventListener","params","Platform","OS","addEventListener","showUrl","error","redirectURL","oauthParameters","parameters"],"mappings":"kUAEqBA,CAAAA,K,8GACdC,G,CAAoD,IAA/CC,CAAAA,gBAA+C,2DAA5B,KAA4B,IAArBC,CAAAA,WAAqB,2DAAP,KAAO,CACvD,GAAI,CAACC,aAAa,CAACC,OAAnB,CAA4B,CAC1B,MAAOC,CAAAA,OAAO,CAACC,MAAR,CACL,GAAIC,CAAAA,KAAJ,CACE,yKADF,CADK,CAAP,CAKD,CAED,MAAO,IAAIF,CAAAA,OAAJ,CAAY,SAACG,OAAD,CAAUF,MAAV,CAAqB,2BACtC,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1BP,aAAa,CAACC,OAAd,CAAsBO,IAAtB,GACAC,OAAO,CAACC,mBAAR,CAA4B,KAA5B,CAAmCJ,UAAnC,EACAD,OAAO,CAACE,KAAK,CAACV,GAAP,CAAP,CACD,CAJD,CAKA,GAAMc,CAAAA,MAAM,CACVC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwB,CAACf,gBAAD,CAAmBC,WAAnB,CAAxB,CAA0D,CAACA,WAAD,CAD5D,CAEAU,OAAO,CAACK,gBAAR,CAAyB,KAAzB,CAAgCR,UAAhC,EACA,uBAAAN,aAAa,CAACC,OAAd,EAAsBc,OAAtB,8BAA8BlB,GAA9B,SAAsCc,MAAtC,EAA8C,SAACK,KAAD,CAAQC,WAAR,CAAwB,CACpER,OAAO,CAACC,mBAAR,CAA4B,KAA5B,CAAmCJ,UAAnC,EACA,GAAIU,KAAJ,CAAW,CACTb,MAAM,CAACa,KAAD,CAAN,CACD,CAFD,IAEO,IAAIC,WAAJ,CAAiB,CACtBZ,OAAO,CAACY,WAAD,CAAP,CACD,CAFM,IAEA,IAAIlB,WAAJ,CAAiB,CACtBM,OAAO,GACR,CACF,CATD,IAUD,CAnBM,CAAP,CAoBD,C,uDAEgB,CACf,GAAI,CAACL,aAAa,CAACC,OAAnB,CAA4B,CAC1B,MAAOC,CAAAA,OAAO,CAACC,MAAR,CACL,GAAIC,CAAAA,KAAJ,CACE,yKADF,CADK,CAAP,CAKD,CAED,MAAO,IAAIF,CAAAA,OAAJ,CAAY,SAACG,OAAD,CAAUF,MAAV,CAAqB,CACtCH,aAAa,CAACC,OAAd,CAAsBiB,eAAtB,CAAsC,SAAAC,UAAU,CAAI,CAClDd,OAAO,CAACc,UAAD,CAAP,CACD,CAFD,EAGD,CAJM,CAAP,CAKD,C,4BA9CkBvB,K","sourcesContent":["import {NativeModules, Linking, Platform} from 'react-native';\n\nexport default class Agent {\n  show(url, ephemeralSession = false, closeOnLoad = false) {\n    if (!NativeModules.A0Auth0) {\n      return Promise.reject(\n        new Error(\n          'Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.'\n        ),\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const urlHandler = event => {\n        NativeModules.A0Auth0.hide();\n        Linking.removeEventListener('url', urlHandler);\n        resolve(event.url);\n      };\n      const params =\n        Platform.OS === 'ios' ? [ephemeralSession, closeOnLoad] : [closeOnLoad];\n      Linking.addEventListener('url', urlHandler);\n      NativeModules.A0Auth0.showUrl(url, ...params, (error, redirectURL) => {\n        Linking.removeEventListener('url', urlHandler);\n        if (error) {\n          reject(error);\n        } else if (redirectURL) {\n          resolve(redirectURL);\n        } else if (closeOnLoad) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  newTransaction() {\n    if (!NativeModules.A0Auth0) {\n      return Promise.reject(\n        new Error(\n          'Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.',\n        ),\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      NativeModules.A0Auth0.oauthParameters(parameters => {\n        resolve(parameters);\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}