{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import Modal from'react-native-modal';import React,{useState}from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TextInput from\"react-native-web/dist/exports/TextInput\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Picker from\"react-native-web/dist/exports/Picker\";import{Button}from'react-native-elements';import{Controller}from'react-hook-form';import{brandOrange}from\"../Colors\";import{floor}from'react-native-reanimated';var styles=StyleSheet.create({label:{color:'white',marginTop:10,marginBottom:5,marginLeft:0},input:{backgroundColor:'white',borderColor:'#000',height:40,padding:10,borderRadius:4},inputContainer:{marginBottom:10},centeredView:{flex:1,justifyContent:\"center\",alignItems:\"center\",marginTop:22},modalView:{height:250,margin:20,backgroundColor:\"white\",borderRadius:20,padding:35,justifyContent:\"space-between\",alignItems:\"center\",flexDirection:\"column\",shadowColor:\"#000\",shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:3.84,elevation:5},twoPickers:{width:200,height:132},twoPickerItems:{height:132},button:{width:100},labelErr:{color:'red',marginTop:10,fontSize:14}});export default React.forwardRef(function(props,ref){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),selectedValue=_useState4[0],setSelectedValue=_useState4[1];var inputRef=React.useRef();console.log(props.control);return React.createElement(View,{style:styles.inputContainer},React.createElement(Text,{style:styles.label},props.name),React.createElement(TextInput,{value:selectedValue,style:styles.input,ref:inputRef,onBlur:props.onBlur,onFocus:function onFocus(){setModalVisible(!modalVisible);inputRef.current.blur();}}),props.errors[props.name]!=undefined&&React.createElement(Text,{style:styles.labelErr},props.errors[props.name].message),React.createElement(Modal,{animationType:\"slide\",transparent:true,visible:modalVisible},React.createElement(View,{style:styles.centeredView},React.createElement(View,{style:styles.modalView},React.createElement(Controller,{control:props.control,name:props.name,defaultValue:\"\",rules:{required:props.required?\"This field is required.\":false,minLength:{value:1,message:\"Field is requiredi\"}},onFocus:function onFocus(){ref.current.focus();},render:function render(_ref){var onChange=_ref.onChange,onBlur=_ref.onBlur,value=_ref.value;return React.createElement(Picker,{selectedValue:selectedValue,style:styles.twoPickers,itemStyle:styles.twoPickerItems,onValueChange:function onValueChange(value){onChange(value);setSelectedValue(value);},value:value,onBlur:onBlur,ref:ref},props.data.map(function(element){return React.createElement(Picker.Item,{label:element.label,value:element.value});}));}}),React.createElement(Button,{style:styles.button,onPress:function onPress(){setModalVisible(!modalVisible);},title:\"Confirm\"})))));});","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/PickerModal.js"],"names":["Modal","React","useState","Button","Controller","brandOrange","floor","styles","StyleSheet","create","label","color","marginTop","marginBottom","marginLeft","input","backgroundColor","borderColor","height","padding","borderRadius","inputContainer","centeredView","flex","justifyContent","alignItems","modalView","margin","flexDirection","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","twoPickers","twoPickerItems","button","labelErr","fontSize","forwardRef","props","ref","modalVisible","setModalVisible","selectedValue","setSelectedValue","inputRef","useRef","console","log","control","name","onBlur","current","blur","errors","undefined","message","required","minLength","value","focus","onChange","data","map","element"],"mappings":"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","sourcesContent":["import Modal from 'react-native-modal';\nimport React, {useState} from 'react';\nimport { Text, View, TextInput, StyleSheet, Picker} from 'react-native';\nimport { Button } from 'react-native-elements';\nimport { Controller } from 'react-hook-form';\nimport { brandOrange } from '../Colors';\nimport { floor } from 'react-native-reanimated';\nconst styles = StyleSheet.create({\n    label: {\n        color: 'white',\n        marginTop: 10,\n        marginBottom: 5,\n        marginLeft: 0,\n    },\n    input: {\n        backgroundColor: 'white',\n        borderColor: '#000',\n        height: 40,\n        padding: 10,\n        borderRadius: 4,\n    },\n    inputContainer: {\n        marginBottom: 10\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n      },\n      modalView: {\n        height: 250,\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n      },\n      twoPickers: {\n        width: 200,\n        height: 132,\n        //backgroundColor: '#FFF0E0',\n        //borderColor: 'black',\n        //borderWidth: 1,\n      },\n      twoPickerItems: {\n        height: 132,\n        //color: 'red'\n      },\n      button: {\n          width: 100\n      },\n      labelErr: {\n        color: 'red',\n        marginTop: 10,\n        fontSize: 14\n      }\n})\nexport default React.forwardRef((props, ref) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(\"\");\n    const inputRef = React.useRef()\n    console.log(props.control)\n    return (\n        <View style={styles.inputContainer}>\n            <Text style={styles.label}>{props.name}</Text>\n            \n            <TextInput value={selectedValue} style={styles.input} ref={inputRef}\n                onBlur={props.onBlur}\n                onFocus={() => {\n                    setModalVisible(!modalVisible)\n                    inputRef.current.blur()\n                }}></TextInput>\n            {\n              props.errors[props.name] != undefined &&\n                <Text style={styles.labelErr}>\n                  {props.errors[props.name].message}\n                </Text>\n            }\n            <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n            >\n                <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                    <Controller\n                        control={props.control} name={props.name} defaultValue=\"\"\n                        rules={{\n                            required: props.required ? \"This field is required.\" : false,\n                            minLength: {value: 1, message: \"Field is requiredi\"}\n                        }}\n                        onFocus={()=>{ref.current.focus()}}\n                        render={({ onChange, onBlur, value }) => (\n                            <Picker\n                                selectedValue={selectedValue}\n                                style={styles.twoPickers} itemStyle={styles.twoPickerItems}\n                                onValueChange={(value) => {\n                                    onChange(value)\n                                    setSelectedValue(value)\n                                    //props.value = itemValue\n                                }}\n                                value={value}\n                                onBlur={onBlur}\n                                ref={ref}\n                            >\n                                {\n                                    props.data.map((element) => {\n                                        return <Picker.Item label={element.label} value={element.value} />\n                                    })\n                                }\n                            </Picker>  \n                        )}\n                    />\n                    \n                            <Button style={styles.button} onPress={() => {\n                                setModalVisible(!modalVisible)\n                            }} title=\"Confirm\"></Button>\n                    </View>\n                </View>\n            </Modal>\n        </View>\n      );\n});"]},"metadata":{},"sourceType":"module"}