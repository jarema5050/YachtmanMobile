{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as WebBrowser from'expo-web-browser';import Platform from\"react-native-web/dist/exports/Platform\";import*as Application from'expo-application';import*as AuthSession from\"expo-auth-session\";var credentialsModule=require(\"./AuthCredentials\");export default function Logout(){var returnUrl,endpoint;return _regeneratorRuntime.async(function Logout$(_context){while(1){switch(_context.prev=_context.next){case 0:returnUrl=\"https://auth.expo.io/@jarema5050/YachtmanMobile\";endpoint=credentialsModule.domain+\"/v2/logout?client_id=\"+credentialsModule.auth0ClientId+\"&returnTo=\"+returnUrl;_context.next=4;return _regeneratorRuntime.awrap(WebBrowser.openBrowserAsync(endpoint));case 4:WebBrowser.dismissAuthSession();case 5:case\"end\":return _context.stop();}}},null,null,null,Promise);}","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/services/Logout.js"],"names":["WebBrowser","Application","AuthSession","credentialsModule","require","Logout","returnUrl","endpoint","domain","auth0ClientId","openBrowserAsync","dismissAuthSession"],"mappings":"4DAAA,MAAO,GAAKA,CAAAA,UAAZ,KAA4B,kBAA5B,C,6DAEA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,kBAA7B,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,mBAA7B,CACA,GAAMC,CAAAA,iBAAiB,CAAGC,OAAO,qBAAjC,CAEA,cAAe,SAAeC,CAAAA,MAAf,0IACLC,SADK,CACO,iDADP,CAELC,QAFK,CAESJ,iBAAiB,CAACK,MAF3B,yBAEyDL,iBAAiB,CAACM,aAF3E,cAEqGH,SAFrG,kDAILN,UAAU,CAACU,gBAAX,CAA4BH,QAA5B,CAJK,SAKXP,UAAU,CAACW,kBAAX,GALW","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport { Platform } from 'react-native';\nimport * as Application from 'expo-application';\nimport * as AuthSession from \"expo-auth-session\";\nconst credentialsModule = require('./AuthCredentials');\n\nexport default async function Logout(){\n    const returnUrl = \"https://auth.expo.io/@jarema5050/YachtmanMobile\"\n    const endpoint = `${credentialsModule.domain}/v2/logout?client_id=${credentialsModule.auth0ClientId}&returnTo=${returnUrl}`\n    \n    await WebBrowser.openBrowserAsync(endpoint)\n    WebBrowser.dismissAuthSession()\n    //console.log(endpoint)\n    //return loginState\n}"]},"metadata":{},"sourceType":"module"}