{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/jedrzej/Documents/GitHub/YachtmanMobile/components/DrawerNav.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { Button } from 'react-native-elements';\nimport ProfileStack from \"./ProfileStack\";\nimport Animated from 'react-native-reanimated';\nimport Logout from \"../services/Logout\";\nimport LoginContext from \"../Contexts/LoginContext\";\n\nfunction FirstScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('Notifications');\n    },\n    title: \"Go to notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction SecondScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    title: \"Go back home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CustomDrawerContent(_ref3) {\n  var progress = _ref3.progress,\n      onLogoutPressed = _ref3.onLogoutPressed,\n      rest = _objectWithoutProperties(_ref3, [\"progress\", \"onLogoutPressed\"]);\n\n  var translateX = Animated.interpolate(progress, {\n    inputRange: [0, 1],\n    outputRange: [-100, 0]\n  });\n  return React.createElement(DrawerContentScrollView, _extends({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        translateX: translateX\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(DrawerItemList, _extends({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), React.createElement(DrawerItem, {\n    label: \"Helloo\",\n    onPress: function onPress() {\n      Logout();\n      onLogoutPressed();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNav() {\n  return React.createElement(LoginContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, function (value) {\n    console.log(value);\n    return React.createElement(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return React.createElement(CustomDrawerContent, _extends({}, props, {\n          onLogoutPressed: value.logoutFunc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 51\n          }\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileStack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Seconds\",\n      component: SecondScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/jedrzej/Documents/GitHub/YachtmanMobile/components/DrawerNav.js"],"names":["React","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Button","ProfileStack","Animated","Logout","LoginContext","FirstScreen","navigation","flex","alignItems","justifyContent","navigate","SecondScreen","goBack","CustomDrawerContent","progress","onLogoutPressed","rest","translateX","interpolate","inputRange","outputRange","transform","Drawer","DrawerNav","value","console","log","props","logoutFunc"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\nimport { Button } from 'react-native-elements';\nimport ProfileStack from './ProfileStack';\nimport Animated from 'react-native-reanimated';\nimport Logout from '../services/Logout';\nimport LoginContext from '../Contexts/LoginContext'\n\nfunction FirstScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button\n        onPress={() => navigation.navigate('Notifications')}\n        title=\"Go to notifications\"\n      />\n    </View>\n  )\n}\n\nfunction SecondScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button onPress={() => navigation.goBack()} title=\"Go back home\" />\n    </View>\n  )\n}\n\nfunction CustomDrawerContent({ progress, onLogoutPressed, ...rest}) {\n  const translateX = Animated.interpolate(progress, {\n    inputRange: [0, 1],\n    outputRange: [-100, 0],\n  })\n\n  return (\n    <DrawerContentScrollView {...rest}>\n      <Animated.View style={{ transform: [{ translateX }] }}>\n        <DrawerItemList {...rest} />\n        <DrawerItem label=\"Helloo\" onPress={() => {\n          Logout()\n          onLogoutPressed()\n        } \n        } />\n      </Animated.View>\n    </DrawerContentScrollView>\n  )\n}\n\nconst Drawer = createDrawerNavigator();\n\nexport default function DrawerNav() {\n  return (\n    <LoginContext.Consumer>\n      {value => {\n        console.log(value);\n        return (\n        <Drawer.Navigator drawerContent={props => <CustomDrawerContent {...props} onLogoutPressed = {value.logoutFunc}/>}>\n          <Drawer.Screen name=\"Profile\" component={ProfileStack} />\n          <Drawer.Screen name=\"Seconds\" component={SecondScreen} />\n        </Drawer.Navigator>\n        )\n      }}\n    </LoginContext.Consumer>\n  )\n}"]},"metadata":{},"sourceType":"module"}