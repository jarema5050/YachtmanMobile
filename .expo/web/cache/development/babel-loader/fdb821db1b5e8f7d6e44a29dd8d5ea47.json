{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jedrzej/Documents/GitHub/YachtmanMobile/views/RegisterView.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Button } from 'react-native-elements';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"stretch\",\n    margin: 20\n  },\n  textInput: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1\n  },\n  warningfield: {\n    color: \"red\"\n  },\n  picker: {\n    height: 80\n  },\n  buttonRegister: {\n    backgroundColor: \"#32a852\"\n  }\n});\n\nvar RegisterView = function (_React$Component) {\n  _inherits(RegisterView, _React$Component);\n\n  var _super = _createSuper(RegisterView);\n\n  function RegisterView(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterView);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function () {\n      var fetchForbidden = false;\n\n      if (_this.state.form.password === null) {\n        _this.state.correctMessage += \"Password cannot be null. \";\n        fetchForbidden = true;\n        console.log(3);\n      }\n\n      if (_this.state.form.confirmPassword === null) {\n        _this.state.correctMessage += \"Confirm password cannot be null. \";\n        fetchForbidden = true;\n        console.log(4);\n      }\n\n      if (_this.state.form.email === null) {\n        _this.state.correctMessage += \"Email cannot be null. \";\n        fetchForbidden = true;\n        console.log(4);\n      }\n\n      if (_this.state.form.password !== _this.state.form.confirmPassword) {\n        _this.state.correctMessage += \"Confirm password has to be same as password. \";\n        fetchForbidden = true;\n        console.log(7);\n      }\n\n      _this.setState({\n        correctMessage: _this.state.correctMessage\n      });\n\n      if (fetchForbidden === false) {\n        _this.state.correctMessage = \"\";\n        fetch(\"https://locatedimg.azurewebsites.net/Home/AddUser\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: _this.state.form.email,\n            password: _this.state.form.password\n          })\n        }).then(function (res) {\n          if (res.status == \"200\") {\n            alert(\"Successfully singned in!\");\n\n            _this.props.navigation.goBack();\n          } else alert(\"Found an account registered with that email. Try with another address.\");\n        }).then(function (data) {\n          return console.log(JSON.stringify(data));\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.state = {\n      form: {\n        password: null,\n        confirmPassword: null,\n        email: null\n      },\n      correctMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(RegisterView, [{\n    key: \"handleChange\",\n    value: function handleChange(name, value) {\n      this.state.form[name] = value;\n      console.log(this.state.form);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, \"Email\"), React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(txt) {\n          return _this2.handleChange(\"email\", txt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Password\"), React.createElement(TextInput, {\n        textContentType: \"password\",\n        autoCompleteType: \"password\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(txt) {\n          return _this2.handleChange(\"password\", txt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Confirm Password\"), React.createElement(TextInput, {\n        textContentType: \"password\",\n        autoCompleteType: \"password\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(txt) {\n          return _this2.handleChange(\"confirmPassword\", txt);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, this.state.correctMessage)), React.createElement(Button, {\n        buttonStyle: styles.buttonRegister,\n        title: \"Register\",\n        onPress: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return RegisterView;\n}(React.Component);\n\nexport default RegisterView;","map":{"version":3,"sources":["/Users/jedrzej/Documents/GitHub/YachtmanMobile/views/RegisterView.js"],"names":["Button","React","NavigationContainer","styles","StyleSheet","create","container","flex","flexDirection","justifyContent","alignItems","margin","textInput","height","borderColor","borderWidth","warningfield","color","picker","buttonRegister","backgroundColor","RegisterView","props","onSubmit","fetchForbidden","state","form","password","correctMessage","console","log","confirmPassword","email","setState","fetch","method","headers","body","JSON","stringify","then","res","status","alert","navigation","goBack","data","catch","err","name","value","txt","handleChange","Component"],"mappings":"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","sourcesContent":["import {Button} from 'react-native-elements'\nimport React from 'react';\nimport {View, Text, TextInput, StyleSheet, SafeAreaView, ScrollView} from \"react-native\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n        alignItems: \"stretch\",\n        margin: 20\n    },\n    textInput: { \n        height: 40,\n        borderColor: \"gray\",\n        borderWidth: 1\n    },\n    warningfield: {\n        color: \"red\"\n    },\n    picker: {\n        height: 80\n    },\n    buttonRegister: {\n        backgroundColor: \"#32a852\"\n    }\n  });\n\nclass RegisterView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: {\n                password: null,\n                confirmPassword: null,\n                email: null\n            },\n            correctMessage : \"\"\n        };\n    }\n    handleChange(name, value) {\n        this.state.form[name] = value;\n        console.log(this.state.form);\n    }\n\n   onSubmit = () => {\n        var fetchForbidden = false;\n        if(this.state.form.password === null){\n            this.state.correctMessage += \"Password cannot be null. \"\n            fetchForbidden = true;\n            console.log(3);\n        }\n        if(this.state.form.confirmPassword === null){\n            this.state.correctMessage += \"Confirm password cannot be null. \"\n            fetchForbidden = true;\n            console.log(4);\n        }\n        if(this.state.form.email === null){\n            this.state.correctMessage += \"Email cannot be null. \"\n            fetchForbidden = true;\n            console.log(4);\n        }\n        if(this.state.form.password !== this.state.form.confirmPassword){\n            this.state.correctMessage += \"Confirm password has to be same as password. \"\n            fetchForbidden = true;\n            console.log(7);\n        }\n        this.setState({correctMessage: this.state.correctMessage});\n        if(fetchForbidden === false)\n        {\n            this.state.correctMessage = \"\";\n            fetch(\"https://locatedimg.azurewebsites.net/Home/AddUser\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email: this.state.form.email,\n                    password: this.state.form.password\n                })\n                })\n                .then((res) => {\n                    if(res.status == \"200\"){\n                        alert(\"Successfully singned in!\");\n                        this.props.navigation.goBack();\n                    }\n                    else\n                        alert(\"Found an account registered with that email. Try with another address.\");\n                })\n                .then((data) =>console.log(JSON.stringify(data)))\n                .catch((err)=>console.log(err));\n        }\n    }\n    render(){\n        return (\n            <SafeAreaView style={styles.container}>\n                <ScrollView>\n                    <View>\n                        <Text>Email</Text>\n                        <TextInput style={styles.textInput} onChangeText={(txt) => this.handleChange(\"email\", txt)}/>\n                    </View>\n                    <View>\n                        <Text>Password</Text>\n                        <TextInput textContentType=\"password\" autoCompleteType=\"password\" style={styles.textInput} onChangeText={(txt) => this.handleChange(\"password\", txt)}/>\n                        <Text>Confirm Password</Text>\n                        <TextInput textContentType=\"password\" autoCompleteType=\"password\" style={styles.textInput} onChangeText={(txt) => this.handleChange(\"confirmPassword\", txt)}/>\n                    </View>\n                    <View>\n                        <Text>{this.state.correctMessage}</Text>\n                    </View>\n                    <Button buttonStyle ={styles.buttonRegister} title=\"Register\" onPress={this.onSubmit}></Button>\n                </ScrollView>\n            </SafeAreaView>\n        );\n    }\n}\nexport default RegisterView;"]},"metadata":{},"sourceType":"module"}