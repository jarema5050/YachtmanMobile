{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/components/DrawerNav.js\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { Button } from 'react-native-elements';\nimport ProfileStack from \"./ProfileStack\";\nimport Animated from 'react-native-reanimated';\nimport Logout from \"../services/Logout\";\nimport LoginContext from \"../Contexts/LoginContext\";\nimport ChangePassword from \"../components/ChangePassword\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nfunction FirstScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('Notifications');\n    },\n    title: \"Go to notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction SecondScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    title: \"Go back home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction CustomDrawerContent(_ref3) {\n  var isLoggedInSocial = _ref3.isLoggedInSocial,\n      progress = _ref3.progress,\n      onLogoutPressed = _ref3.onLogoutPressed,\n      rest = _objectWithoutProperties(_ref3, [\"isLoggedInSocial\", \"progress\", \"onLogoutPressed\"]);\n\n  return function (isLoggedInSocial) {\n    var translateX = Animated.interpolate(progress, {\n      inputRange: [0, 1],\n      outputRange: [-100, 0]\n    });\n\n    function fetchData() {\n      var convertSub, userData, email, sub;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              convertSub = function convertSub(sub) {\n                var array = sub.split('|');\n                return array[0];\n              };\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@user_data'));\n\n            case 4:\n              userData = _context.sent;\n\n              if (!(userData !== null)) {\n                _context.next = 9;\n                break;\n              }\n\n              email = JSON.parse(userData).email;\n              sub = JSON.parse(userData).sub;\n              return _context.abrupt(\"return\", {\n                email: email,\n                connection: convertSub(sub)\n              });\n\n            case 9:\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"Err \" + _context.t0.message);\n              return _context.abrupt(\"return\", null);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]], Promise);\n    }\n\n    var isLoggedInSocial = null;\n    useEffect(function () {\n      isLoggedInSocial = fetchData();\n    });\n    return React.createElement(DrawerContentScrollView, _extends({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }), React.createElement(Animated.View, {\n      style: {\n        transform: [{\n          translateX: translateX\n        }]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, React.createElement(DrawerItemList, _extends({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    })), React.createElement(DrawerItem, {\n      label: \"Logout\",\n      onPress: function onPress() {\n        Logout();\n        onLogoutPressed();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), isLoggedInSocial == 'auth0' && React.createElement(DrawerItem, {\n      label: \"Change Password\",\n      onPress: function onPress() {\n        return ChangePassword();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    })));\n  }(isLoggedInSocial);\n}\n\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNav() {\n  return React.createElement(LoginContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, function (value) {\n    console.log(value);\n    return React.createElement(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return React.createElement(CustomDrawerContent, _extends({}, props, {\n          onLogoutPressed: value.logoutFunc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 51\n          }\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileStack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Seconds\",\n      component: SecondScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/components/DrawerNav.js"],"names":["React","useEffect","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Button","ProfileStack","Animated","Logout","LoginContext","ChangePassword","AsyncStorage","FirstScreen","navigation","flex","alignItems","justifyContent","navigate","SecondScreen","goBack","CustomDrawerContent","isLoggedInSocial","progress","onLogoutPressed","rest","translateX","interpolate","inputRange","outputRange","fetchData","convertSub","sub","array","split","getItem","userData","email","JSON","parse","connection","console","log","message","transform","Drawer","DrawerNav","value","props","logoutFunc"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { View } from 'react-native';\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n  DrawerItemList,\n  DrawerItem,\n} from '@react-navigation/drawer';\nimport { Button } from 'react-native-elements';\nimport ProfileStack from './ProfileStack';\nimport Animated from 'react-native-reanimated';\nimport Logout from '../services/Logout';\nimport LoginContext from '../Contexts/LoginContext'\nimport ChangePassword from '../components/ChangePassword'\nimport AsyncStorage from '@react-native-community/async-storage';\nfunction FirstScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button\n        onPress={() => navigation.navigate('Notifications')}\n        title=\"Go to notifications\"\n      />\n    </View>\n  )\n}\n\nfunction SecondScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button onPress={() => navigation.goBack()} title=\"Go back home\" />\n    </View>\n  )\n}\n\nfunction CustomDrawerContent({ isLoggedInSocial, progress, onLogoutPressed, ...rest}) {\n  const translateX = Animated.interpolate(progress, {\n    inputRange: [0, 1],\n    outputRange: [-100, 0],\n  })\n  async function fetchData() {\n    const convertSub = (sub) => {\n      const array = sub.split('|');\n      return array[0];\n    }\n    try {\n        const userData = await AsyncStorage.getItem('@user_data');\n        if (userData !== null) {\n            const email = JSON.parse(userData).email\n            const sub = JSON.parse(userData).sub\n            return {email: email, connection: convertSub(sub)}\n            \n        }\n      } catch (error) {\n        console.log(\"Err \" + error.message)\n        return null\n      }\n  }\n  var isLoggedInSocial = null;\n  useEffect(() => {\n    isLoggedInSocial = fetchData()\n  });\n  \n\n  return (\n    <DrawerContentScrollView {...rest}>\n      <Animated.View style={{ transform: [{ translateX }] }}>\n        <DrawerItemList {...rest} />\n        <DrawerItem label=\"Logout\" onPress={() => {\n          Logout()\n          onLogoutPressed()\n        } \n        } />\n        {\n          isLoggedInSocial == 'auth0' &&\n            <DrawerItem label=\"Change Password\" onPress={() => ChangePassword()}/>\n        }\n      </Animated.View>\n    </DrawerContentScrollView>\n  )\n}\n\nconst Drawer = createDrawerNavigator();\n\nexport default function DrawerNav() {\n  return (\n    <LoginContext.Consumer>\n      {value => {\n        console.log(value);\n        return (\n        <Drawer.Navigator drawerContent={props => <CustomDrawerContent {...props} onLogoutPressed = {value.logoutFunc}/>}>\n          <Drawer.Screen name=\"Profile\" component={ProfileStack} />\n          <Drawer.Screen name=\"Seconds\" component={SecondScreen} />\n        </Drawer.Navigator>\n        )\n      }}\n    </LoginContext.Consumer>\n  )\n}"]},"metadata":{},"sourceType":"module"}