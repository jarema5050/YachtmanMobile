{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/ImageCameraModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Button } from 'react-native-elements';\nimport Modal from 'react-native-modal';\nimport ImagePicker from \"../Forms/ImagePicker\";\nimport { Feather } from '@expo/vector-icons';\n\nvar colors = require(\"../Colors\");\n\nvar styles = StyleSheet.create({\n  trashButton: {\n    backgroundColor: \"red\",\n    borderRadius: 20,\n    width: 40,\n    margin: 10,\n    alignSelf: \"flex-end\"\n  },\n  imageContainer: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    height: 130\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    height: 130,\n    backgroundColor: colors.brandOrange,\n    alignItems: \"center\"\n  },\n  text: {\n    fontSize: 24,\n    color: \"white\",\n    fontWeight: \"600\"\n  },\n  modal: {\n    backgroundColor: \"white\"\n  },\n  view: {\n    display: \"flex\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    height: 200,\n    width: \"80%\",\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default function ImageCameraModal(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var image = typeof route.params != \"undefined\" ? route.params.image : null;\n  console.log(image);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      toggleModal = _useState2[1];\n\n  var _useState3 = useState(image),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageUri = _useState4[0],\n      setImageUri = _useState4[1];\n\n  console.log(imageUri);\n\n  var showImageCallback = function showImageCallback(uri) {\n    toggleModal(false);\n    setImageUri(uri);\n  };\n\n  var MainView;\n\n  if (imageUri != null) {\n    MainView = function MainView() {\n      return React.createElement(ImageBackground, {\n        source: {\n          uri: imageUri\n        },\n        style: styles.imageContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        icon: React.createElement(Feather, {\n          name: \"trash-2\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }),\n        buttonStyle: styles.trashButton,\n        onPress: function onPress() {\n          showImageCallback(null);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }));\n    };\n  } else {\n    MainView = function MainView() {\n      return React.createElement(TouchableOpacity, {\n        style: styles.container,\n        onPress: function onPress() {\n          toggleModal(true);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, \"Add new photo\"));\n    };\n  }\n\n  return React.createElement(View, {\n    style: styles.view,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(MainView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: isModalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, React.createElement(ImagePicker, {\n    hideModal: toggleModal,\n    callbackFunc: showImageCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n      backgroundColor: \"gray\"\n    }),\n    onPress: function onPress() {\n      toggleModal(false);\n      navigation.navigate(\"Take a photo\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Take a photo\")), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      toggleModal(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\"))))));\n}","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/ImageCameraModal.js"],"names":["React","useState","Button","Modal","ImagePicker","Feather","colors","require","styles","StyleSheet","create","trashButton","backgroundColor","borderRadius","width","margin","alignSelf","imageContainer","flex","justifyContent","height","container","brandOrange","alignItems","text","fontSize","color","fontWeight","modal","view","display","centeredView","marginTop","modalView","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","openButton","textStyle","textAlign","modalText","marginBottom","ImageCameraModal","navigation","route","image","params","console","log","isModalVisible","toggleModal","imageUri","setImageUri","showImageCallback","uri","MainView","Alert","alert","navigate"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Text, TouchableOpacity, TouchableHighlight, View, StyleSheet, ImageBackground } from 'react-native'\nimport { Button } from 'react-native-elements';\nimport Modal from 'react-native-modal'\nimport ImagePicker from \"../Forms/ImagePicker\"\nimport { Feather } from '@expo/vector-icons'; \n // 4.1.1\n const colors = require(\"../Colors\")\n const styles = StyleSheet.create({\n    trashButton: {\n        backgroundColor: \"red\",\n        borderRadius: 20,\n        width: 40,\n        margin: 10,\n        alignSelf: \"flex-end\"\n    },\n    imageContainer: {\n        flex: 1,\n        justifyContent: \"flex-end\",\n        height: 130\n    },\n    container: { flex: 1, justifyContent: \"center\", height: 130, backgroundColor: colors.brandOrange, alignItems: \"center\" },\n    text: {fontSize: 24, color: \"white\", fontWeight: \"600\"},\n    modal: {backgroundColor:\"white\"},\n    view: {display: \"flex\"},\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n      },\n      modalView: {\n        height: 200,\n        width: \"80%\",\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n      },\n      openButton: {\n        backgroundColor: \"#F194FF\",\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n      },\n      textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n      }\n})\n\nexport default function ImageCameraModal({navigation, route}) {\n\nconst image = (typeof route.params != \"undefined\") ? route.params.image : null;\nconsole.log(image)    \n  const [isModalVisible, toggleModal] = useState(false);\n    //console.log(\"received\",image)\n  const [imageUri, setImageUri] = useState(image);\n    console.log(imageUri)\n\n  const showImageCallback = (uri) => \n  {\n    toggleModal(false)\n    setImageUri(uri)\n  }\n  \n\n  let MainView;\n    //console.log(receivedPhoto.imageUri)\n    if(imageUri != null){\n        MainView =\n        () => {return (\n        <ImageBackground source={{ uri: imageUri }} style={styles.imageContainer}>\n            <Button\n            icon={\n                <Feather name=\"trash-2\" size={24} color=\"white\" />\n            }\n            buttonStyle={styles.trashButton}\n            onPress={()=>{showImageCallback(null)}}\n            />\n        </ImageBackground>\n        )};\n    }\n    else{\n        MainView = () => { return (\n            <TouchableOpacity style={styles.container} onPress={() => {toggleModal(true)}}>\n                <Text style={styles.text}>Add new photo</Text>\n            </TouchableOpacity>\n        )};\n    }\n\n    return (\n      <View style={styles.view}>\n        <MainView></MainView>\n        <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={isModalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <ImagePicker hideModal={toggleModal} callbackFunc={showImageCallback}></ImagePicker>\n            <TouchableHighlight\n              style={{ ...styles.openButton, backgroundColor: \"gray\" }}\n              onPress={() => {\n                toggleModal(false)\n                navigation.navigate(\"Take a photo\")\n              }}\n            >\n              <Text style={styles.textStyle}>Take a photo</Text>\n            </TouchableHighlight>\n            <TouchableHighlight\n              style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\n              onPress={() => {\n                toggleModal(false)\n              }}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </TouchableHighlight>\n          </View>\n        </View>\n      </Modal>\n      </View>\n    )\n}"]},"metadata":{},"sourceType":"module"}