{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Client from \"../networking\";\nimport { apply } from \"../utils/whitelist\";\nimport { toCamelCase } from \"../utils/camel\";\nimport Auth0Error from \"./error\";\n\nfunction responseHandler(response) {\n  var exceptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (response.ok && response.json) {\n    return toCamelCase(response.json, exceptions);\n  }\n\n  throw new Auth0Error(response);\n}\n\nvar attributes = ['name', 'nickname', 'picture', 'user_id', 'user_metadata', 'app_metadata', 'email', 'email_verified', 'given_name', 'family_name'];\n\nvar Users = function () {\n  function Users() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Users);\n\n    this.client = new Client(options);\n\n    if (!options.token) {\n      throw new Error('Missing token in parameters');\n    }\n  }\n\n  _createClass(Users, [{\n    key: \"getUser\",\n    value: function getUser() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var payload = apply({\n        parameters: {\n          id: {\n            required: true\n          }\n        }\n      }, parameters);\n      return this.client.get(\"/api/v2/users/\" + encodeURIComponent(payload.id)).then(function (response) {\n        return responseHandler(response, {\n          attributes: attributes,\n          whitelist: true,\n          rootOnly: true\n        });\n      });\n    }\n  }, {\n    key: \"patchUser\",\n    value: function patchUser() {\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var payload = apply({\n        parameters: {\n          id: {\n            required: true\n          },\n          metadata: {\n            required: true\n          }\n        }\n      }, parameters);\n      return this.client.patch(\"/api/v2/users/\" + encodeURIComponent(payload.id), {\n        user_metadata: payload.metadata\n      }).then(function (response) {\n        return responseHandler(response, {\n          attributes: attributes,\n          whitelist: true,\n          rootOnly: true\n        });\n      });\n    }\n  }]);\n\n  return Users;\n}();\n\nexport { Users as default };","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/node_modules/react-native-auth0/src/management/users.js"],"names":["Client","apply","toCamelCase","Auth0Error","responseHandler","response","exceptions","ok","json","attributes","Users","options","client","token","Error","parameters","payload","id","required","get","encodeURIComponent","then","whitelist","rootOnly","metadata","patch","user_metadata"],"mappings":";;AAAA,OAAOA,MAAP;AACA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,OAAOC,UAAP;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAoD;AAAA,MAAjBC,UAAiB,uEAAJ,EAAI;;AAClD,MAAID,QAAQ,CAACE,EAAT,IAAeF,QAAQ,CAACG,IAA5B,EAAkC;AAChC,WAAON,WAAW,CAACG,QAAQ,CAACG,IAAV,EAAgBF,UAAhB,CAAlB;AACD;;AACD,QAAM,IAAIH,UAAJ,CAAeE,QAAf,CAAN;AACD;;AAED,IAAMI,UAAU,GAAG,CACjB,MADiB,EAEjB,UAFiB,EAGjB,SAHiB,EAIjB,SAJiB,EAKjB,eALiB,EAMjB,cANiB,EAOjB,OAPiB,EAQjB,gBARiB,EASjB,YATiB,EAUjB,aAViB,CAAnB;;IAoBqBC,K;AACnB,mBAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,MAAL,GAAc,IAAIZ,MAAJ,CAAWW,OAAX,CAAd;;AACA,QAAI,CAACA,OAAO,CAACE,KAAb,EAAoB;AAClB,YAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF;;;;8BAYwB;AAAA,UAAjBC,UAAiB,uEAAJ,EAAI;AACvB,UAAMC,OAAO,GAAGf,KAAK,CACnB;AACEc,QAAAA,UAAU,EAAE;AACVE,UAAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ;AADM;AADd,OADmB,EAMnBH,UANmB,CAArB;AAQA,aAAO,KAAKH,MAAL,CACJO,GADI,oBACiBC,kBAAkB,CAACJ,OAAO,CAACC,EAAT,CADnC,EAEJI,IAFI,CAEC,UAAAhB,QAAQ;AAAA,eACZD,eAAe,CAACC,QAAD,EAAW;AACxBI,UAAAA,UAAU,EAAVA,UADwB;AAExBa,UAAAA,SAAS,EAAE,IAFa;AAGxBC,UAAAA,QAAQ,EAAE;AAHc,SAAX,CADH;AAAA,OAFT,CAAP;AASD;;;gCAa0B;AAAA,UAAjBR,UAAiB,uEAAJ,EAAI;AACzB,UAAMC,OAAO,GAAGf,KAAK,CACnB;AACEc,QAAAA,UAAU,EAAE;AACVE,UAAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADM;AAEVM,UAAAA,QAAQ,EAAE;AAAEN,YAAAA,QAAQ,EAAE;AAAZ;AAFA;AADd,OADmB,EAOnBH,UAPmB,CAArB;AASA,aAAO,KAAKH,MAAL,CACJa,KADI,oBACmBL,kBAAkB,CAACJ,OAAO,CAACC,EAAT,CADrC,EACqD;AACxDS,QAAAA,aAAa,EAAEV,OAAO,CAACQ;AADiC,OADrD,EAIJH,IAJI,CAIC,UAAAhB,QAAQ;AAAA,eACZD,eAAe,CAACC,QAAD,EAAW;AACxBI,UAAAA,UAAU,EAAVA,UADwB;AAExBa,UAAAA,SAAS,EAAE,IAFa;AAGxBC,UAAAA,QAAQ,EAAE;AAHc,SAAX,CADH;AAAA,OAJT,CAAP;AAWD;;;;;;SAtEkBb,K","sourcesContent":["import Client from '../networking';\nimport { apply } from '../utils/whitelist';\nimport { toCamelCase } from '../utils/camel';\nimport Auth0Error from './error';\n\nfunction responseHandler(response, exceptions = {}) {\n  if (response.ok && response.json) {\n    return toCamelCase(response.json, exceptions);\n  }\n  throw new Auth0Error(response);\n}\n\nconst attributes = [\n  'name',\n  'nickname',\n  'picture',\n  'user_id',\n  'user_metadata',\n  'app_metadata',\n  'email',\n  'email_verified',\n  'given_name',\n  'family_name'\n];\n\n/**\n * Auth0 Management API User endpoints\n *\n * @export\n * @see https://auth0.com/docs/api/management/v2#!/Users/\n * @class Users\n */\nexport default class Users {\n  constructor(options = {}) {\n    this.client = new Client(options);\n    if (!options.token) {\n      throw new Error('Missing token in parameters');\n    }\n  }\n\n  /**\n   * Returns the user by identifier\n   *\n   * @param {Object} parameters get user by identifier parameters\n   * @param {String} parameters.id identifier of the user to obtain\n   * @returns {Promise}\n   * @see https://auth0.com/docs/api/management/v2#!/Users/get_users_by_id\n   *\n   * @memberof Users\n   */\n  getUser(parameters = {}) {\n    const payload = apply(\n      {\n        parameters: {\n          id: { required: true }\n        }\n      },\n      parameters\n    );\n    return this.client\n      .get(`/api/v2/users/${encodeURIComponent(payload.id)}`)\n      .then(response =>\n        responseHandler(response, {\n          attributes,\n          whitelist: true,\n          rootOnly: true\n        })\n      );\n  }\n\n  /**\n   * Patch a user's `user_metadata`\n   *\n   * @param {Object} parameters patch user metadata parameters\n   * @param {String} parameters.id identifier of the user to patch\n   * @param {Object} parameters.metadata object with attributes to store in user_metadata.\n   * @returns {Promise}\n   * @see https://auth0.com/docs/api/management/v2#!/Users/patch_users_by_id\n   *\n   * @memberof Users\n   */\n  patchUser(parameters = {}) {\n    const payload = apply(\n      {\n        parameters: {\n          id: { required: true },\n          metadata: { required: true }\n        }\n      },\n      parameters\n    );\n    return this.client\n      .patch(`/api/v2/users/${encodeURIComponent(payload.id)}`, {\n        user_metadata: payload.metadata\n      })\n      .then(response =>\n        responseHandler(response, {\n          attributes,\n          whitelist: true,\n          rootOnly: true\n        })\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}