{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar Agent = function () {\n  function Agent() {\n    _classCallCheck(this, Agent);\n  }\n\n  _createClass(Agent, [{\n    key: \"show\",\n    value: function show(url) {\n      var ephemeralSession = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var closeOnLoad = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (!NativeModules.A0Auth0) {\n        return Promise.reject(new Error('Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.'));\n      }\n\n      return new Promise(function (resolve, reject) {\n        var _NativeModules$A0Auth;\n\n        var urlHandler = function urlHandler(event) {\n          NativeModules.A0Auth0.hide();\n          Linking.removeEventListener('url', urlHandler);\n          resolve(event.url);\n        };\n\n        var params = Platform.OS === 'ios' ? [ephemeralSession, closeOnLoad] : [closeOnLoad];\n        Linking.addEventListener('url', urlHandler);\n\n        (_NativeModules$A0Auth = NativeModules.A0Auth0).showUrl.apply(_NativeModules$A0Auth, [url].concat(params, [function (error, redirectURL) {\n          Linking.removeEventListener('url', urlHandler);\n\n          if (error) {\n            reject(error);\n          } else if (redirectURL) {\n            resolve(redirectURL);\n          } else if (closeOnLoad) {\n            resolve();\n          }\n        }]));\n      });\n    }\n  }, {\n    key: \"newTransaction\",\n    value: function newTransaction() {\n      if (!NativeModules.A0Auth0) {\n        return Promise.reject(new Error('Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.'));\n      }\n\n      return new Promise(function (resolve, reject) {\n        NativeModules.A0Auth0.oauthParameters(function (parameters) {\n          resolve(parameters);\n        });\n      });\n    }\n  }]);\n\n  return Agent;\n}();\n\nexport { Agent as default };","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/node_modules/react-native-auth0/src/webauth/agent.js"],"names":["Agent","url","ephemeralSession","closeOnLoad","NativeModules","A0Auth0","Promise","reject","Error","resolve","urlHandler","event","hide","Linking","removeEventListener","params","Platform","OS","addEventListener","showUrl","error","redirectURL","oauthParameters","parameters"],"mappings":";;;;;;IAEqBA,K;;;;;;;yBACdC,G,EAAoD;AAAA,UAA/CC,gBAA+C,uEAA5B,KAA4B;AAAA,UAArBC,WAAqB,uEAAP,KAAO;;AACvD,UAAI,CAACC,aAAa,CAACC,OAAnB,EAA4B;AAC1B,eAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,CACE,yKADF,CADK,CAAP;AAKD;;AAED,aAAO,IAAIF,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AAAA;;AACtC,YAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1BP,UAAAA,aAAa,CAACC,OAAd,CAAsBO,IAAtB;AACAC,UAAAA,OAAO,CAACC,mBAAR,CAA4B,KAA5B,EAAmCJ,UAAnC;AACAD,UAAAA,OAAO,CAACE,KAAK,CAACV,GAAP,CAAP;AACD,SAJD;;AAKA,YAAMc,MAAM,GACVC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAACf,gBAAD,EAAmBC,WAAnB,CAAxB,GAA0D,CAACA,WAAD,CAD5D;AAEAU,QAAAA,OAAO,CAACK,gBAAR,CAAyB,KAAzB,EAAgCR,UAAhC;;AACA,iCAAAN,aAAa,CAACC,OAAd,EAAsBc,OAAtB,+BAA8BlB,GAA9B,SAAsCc,MAAtC,GAA8C,UAACK,KAAD,EAAQC,WAAR,EAAwB;AACpER,UAAAA,OAAO,CAACC,mBAAR,CAA4B,KAA5B,EAAmCJ,UAAnC;;AACA,cAAIU,KAAJ,EAAW;AACTb,YAAAA,MAAM,CAACa,KAAD,CAAN;AACD,WAFD,MAEO,IAAIC,WAAJ,EAAiB;AACtBZ,YAAAA,OAAO,CAACY,WAAD,CAAP;AACD,WAFM,MAEA,IAAIlB,WAAJ,EAAiB;AACtBM,YAAAA,OAAO;AACR;AACF,SATD;AAUD,OAnBM,CAAP;AAoBD;;;qCAEgB;AACf,UAAI,CAACL,aAAa,CAACC,OAAnB,EAA4B;AAC1B,eAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,KAAJ,CACE,yKADF,CADK,CAAP;AAKD;;AAED,aAAO,IAAIF,OAAJ,CAAY,UAACG,OAAD,EAAUF,MAAV,EAAqB;AACtCH,QAAAA,aAAa,CAACC,OAAd,CAAsBiB,eAAtB,CAAsC,UAAAC,UAAU,EAAI;AAClDd,UAAAA,OAAO,CAACc,UAAD,CAAP;AACD,SAFD;AAGD,OAJM,CAAP;AAKD;;;;;;SA9CkBvB,K","sourcesContent":["import {NativeModules, Linking, Platform} from 'react-native';\n\nexport default class Agent {\n  show(url, ephemeralSession = false, closeOnLoad = false) {\n    if (!NativeModules.A0Auth0) {\n      return Promise.reject(\n        new Error(\n          'Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.'\n        ),\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const urlHandler = event => {\n        NativeModules.A0Auth0.hide();\n        Linking.removeEventListener('url', urlHandler);\n        resolve(event.url);\n      };\n      const params =\n        Platform.OS === 'ios' ? [ephemeralSession, closeOnLoad] : [closeOnLoad];\n      Linking.addEventListener('url', urlHandler);\n      NativeModules.A0Auth0.showUrl(url, ...params, (error, redirectURL) => {\n        Linking.removeEventListener('url', urlHandler);\n        if (error) {\n          reject(error);\n        } else if (redirectURL) {\n          resolve(redirectURL);\n        } else if (closeOnLoad) {\n          resolve();\n        }\n      });\n    });\n  }\n\n  newTransaction() {\n    if (!NativeModules.A0Auth0) {\n      return Promise.reject(\n        new Error(\n          'Missing NativeModule. React Native versions 0.60 and up perform auto-linking. Please see https://github.com/react-native-community/cli/blob/master/docs/autolinking.md.',\n        ),\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      NativeModules.A0Auth0.oauthParameters(parameters => {\n        resolve(parameters);\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}