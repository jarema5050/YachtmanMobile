{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as WebBrowser from 'expo-web-browser';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as Application from 'expo-application';\n\nvar credentialsModule = require(\"./AuthCredentials\");\n\nexport default function Logout() {\n  var returnUrl, endpoint;\n  return _regeneratorRuntime.async(function Logout$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          returnUrl = Application.applicationId + \"://\" + credentialsModule.domainWithoutHttps + \"/\" + Platform.OS + \"/\" + Application.applicationId + \"/callback\";\n          endpoint = credentialsModule.domain + \"/v2/logout?client_id=\" + credentialsModule.auth0ClientId + \"&returnTo=\" + returnUrl;\n          console.log(endpoint);\n          return _context.abrupt(\"return\", loginState);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/jedrzej/Documents/GitHub/YachtmanMobile/services/Logout.js"],"names":["WebBrowser","Application","credentialsModule","require","Logout","returnUrl","applicationId","domainWithoutHttps","Platform","OS","endpoint","domain","auth0ClientId","console","log","loginState"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;AAEA,IAAMC,iBAAiB,GAAGC,OAAO,qBAAjC;;AAEA,eAAe,SAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,UAAAA,SADK,GACUJ,WAAW,CAACK,aADtB,WACyCJ,iBAAiB,CAACK,kBAD3D,SACiFC,QAAQ,CAACC,EAD1F,SACgGR,WAAW,CAACK,aAD5G;AAELI,UAAAA,QAFK,GAESR,iBAAiB,CAACS,MAF3B,6BAEyDT,iBAAiB,CAACU,aAF3E,kBAEqGP,SAFrG;AAIXQ,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAJW,2CAKJK,UALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as WebBrowser from 'expo-web-browser';\nimport { Platform } from 'react-native';\nimport * as Application from 'expo-application';\n\nconst credentialsModule = require('./AuthCredentials');\n\nexport default async function Logout(){\n    const returnUrl = `${Application.applicationId}://${credentialsModule.domainWithoutHttps}/${Platform.OS}/${Application.applicationId}/callback`\n    const endpoint = `${credentialsModule.domain}/v2/logout?client_id=${credentialsModule.auth0ClientId}&returnTo=${returnUrl}`\n    //await WebBrowser.openBrowserAsync(endpoint)\n    console.log(endpoint)\n    return loginState\n}"]},"metadata":{},"sourceType":"module"}