{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseError from \"../utils/baseError\";\n\nvar Auth0Error = function (_BaseError) {\n  _inherits(Auth0Error, _BaseError);\n\n  var _super = _createSuper(Auth0Error);\n\n  function Auth0Error(response) {\n    var _this;\n\n    _classCallCheck(this, Auth0Error);\n\n    var status = response.status,\n        _response$json = response.json,\n        json = _response$json === void 0 ? {} : _response$json,\n        text = response.text;\n    var error = json.error,\n        errorCode = json.errorCode,\n        message = json.message;\n    _this = _super.call(this, error || 'a0.response.invalid', message || text || 'unknown error');\n    _this.json = json;\n    _this.status = status;\n    _this.code = errorCode;\n    return _this;\n  }\n\n  return Auth0Error;\n}(BaseError);\n\nexport { Auth0Error as default };","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/node_modules/react-native-auth0/src/management/error.js"],"names":["BaseError","Auth0Error","response","status","json","text","error","errorCode","message","code"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP;;IAEqBC,U;;;;;AACnB,sBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAAA,QACZC,MADY,GACgBD,QADhB,CACZC,MADY;AAAA,yBACgBD,QADhB,CACJE,IADI;AAAA,QACJA,IADI,+BACG,EADH;AAAA,QACOC,IADP,GACgBH,QADhB,CACOG,IADP;AAAA,QAEZC,KAFY,GAEkBF,IAFlB,CAEZE,KAFY;AAAA,QAELC,SAFK,GAEkBH,IAFlB,CAELG,SAFK;AAAA,QAEMC,OAFN,GAEkBJ,IAFlB,CAEMI,OAFN;AAGpB,8BAAMF,KAAK,IAAI,qBAAf,EAAsCE,OAAO,IAAIH,IAAX,IAAmB,eAAzD;AACA,UAAKD,IAAL,GAAYA,IAAZ;AACA,UAAKD,MAAL,GAAcA,MAAd;AACA,UAAKM,IAAL,GAAYF,SAAZ;AANoB;AAOrB;;;EARqCP,S;;SAAnBC,U","sourcesContent":["import BaseError from '../utils/baseError';\n\nexport default class Auth0Error extends BaseError {\n  constructor(response) {\n    const { status, json = {}, text } = response;\n    const { error, errorCode, message } = json;\n    super(error || 'a0.response.invalid', message || text || 'unknown error');\n    this.json = json;\n    this.status = status;\n    this.code = errorCode;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}