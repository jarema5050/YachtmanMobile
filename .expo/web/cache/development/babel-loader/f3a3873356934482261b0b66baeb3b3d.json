{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/Camera.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Camera } from 'expo-camera';\nimport { Button } from 'react-native-elements';\nimport { Entypo } from '@expo/vector-icons';\nimport ImagesView from \"./ImagesView\";\nimport { brandMarine } from \"../Colors\";\n\nvar colors = require(\"../Colors\");\n\nvar styles = StyleSheet.create({\n  buttonTakeAPhoto: {\n    backgroundColor: \"#3c4ee8\"\n  }\n});\nexport default function CameraView(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var camera;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      photo = _useState6[0],\n      setPhoto = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var snap = function snap() {\n    var _photo;\n\n    return _regeneratorRuntime.async(function snap$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!camera) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(camera.takePictureAsync({\n              base64: true\n            }));\n\n          case 3:\n            _photo = _context2.sent;\n            setPhoto(_photo);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var newPhotoFunc = function newPhotoFunc() {\n    setPhoto(null);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  if (photo === null) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Camera, {\n      style: {\n        flex: 7\n      },\n      type: type,\n      ref: function ref(_ref2) {\n        camera = _ref2;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 6,\n        backgroundColor: 'transparent',\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        flex: 1,\n        alignItems: \"flex-end\",\n        paddingTop: 20\n      },\n      onPress: function onPress() {\n        setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 10,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Flip\"))), React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        alignItems: \"center\"\n      },\n      onPress: function onPress() {\n        snap();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, React.createElement(Entypo, {\n      name: \"circle\",\n      size: 48,\n      color: colors.brandOrange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })))));\n  } else {\n    return React.createElement(ImagesView, {\n      navigation: navigation,\n      discardFunc: newPhotoFunc,\n      photo: photo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/Camera.js"],"names":["React","useState","useEffect","Camera","Button","Entypo","ImagesView","brandMarine","colors","require","styles","StyleSheet","create","buttonTakeAPhoto","backgroundColor","CameraView","navigation","route","camera","hasPermission","setHasPermission","Constants","Type","back","type","setType","photo","setPhoto","requestPermissionsAsync","status","snap","takePictureAsync","base64","newPhotoFunc","flex","flexDirection","ref","alignItems","paddingTop","front","fontSize","marginBottom","color","justifyContent","brandOrange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity, StyleSheet } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport { Button } from 'react-native-elements';\nimport { Entypo } from '@expo/vector-icons'; \nimport ImagesView from \"./ImagesView\";\nimport { brandMarine } from '../Colors';\n\nconst colors = require(\"../Colors\")\n\nconst styles = StyleSheet.create({\n    buttonTakeAPhoto: {\n        backgroundColor: \"#3c4ee8\"\n    }\n  });\n\nexport default function CameraView({navigation, route}) {\nvar camera;\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  const [photo, setPhoto] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n    const snap = async () => {\n        if (camera) {\n        let photo = await camera.takePictureAsync({base64: true});\n        setPhoto(photo);\n        }\n    };\n    const newPhotoFunc = () => {\n        setPhoto(null)\n    }\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  if (photo === null){\n    return (\n        <View style={{flex: 1, flexDirection: 'column'}}>\n          \n        <Camera style={{ flex: 7 }} type={type} ref={ref => {\n            camera = ref;\n        }}>\n            <View\n              style={{\n                flex: 6,\n                backgroundColor: 'transparent',\n                flexDirection: 'row',\n              }}>\n              <TouchableOpacity\n                style={{\n                    flex: 1,\n                    alignItems:\"flex-end\",\n                    paddingTop: 20\n                }}\n                onPress={() => {\n                  setType(\n                    type === Camera.Constants.Type.back\n                      ? Camera.Constants.Type.front\n                      : Camera.Constants.Type.back\n                  );\n                }}>\n                <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}>Flip</Text>\n            </TouchableOpacity>\n              \n            </View>\n            <View style={{ flex: 1, backgroundColor: \"transparent\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <TouchableOpacity\n                    style={{\n                        alignItems: \"center\"\n                    }}\n                    onPress={() => {\n                    snap()\n                    }}>\n                    <Entypo name=\"circle\" size={48} color={colors.brandOrange} />\n            </TouchableOpacity>\n          </View> \n        </Camera>\n           \n        </View>\n      );\n  }\n  \n  else{\n    return <ImagesView navigation={navigation} discardFunc={newPhotoFunc} photo={photo}/>;\n}\n}\n"]},"metadata":{},"sourceType":"module"}