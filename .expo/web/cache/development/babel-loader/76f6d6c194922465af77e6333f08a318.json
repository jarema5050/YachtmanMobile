{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/TextInput.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Controller } from 'react-hook-form';\nvar styles = StyleSheet.create({\n  label: {\n    color: 'white',\n    marginTop: 10,\n    marginBottom: 5,\n    marginLeft: 0\n  },\n  labelErr: {\n    color: 'red',\n    marginTop: 10,\n    fontSize: 14\n  },\n  input: {\n    backgroundColor: 'white',\n    borderColor: '#000',\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  inputContainer: {\n    marginBottom: 10\n  }\n});\nexport default React.forwardRef(function (props, ref) {\n  return React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, props.name), React.createElement(Controller, {\n    control: props.control,\n    onFocus: function onFocus() {\n      ref.current.focus();\n    },\n    render: function render(_ref) {\n      var onChange = _ref.onChange,\n          onBlur = _ref.onBlur,\n          value = _ref.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        ref: ref,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      });\n    },\n    rules: {\n      maxLength: {\n        value: props.maxLength,\n        message: \"This field maximum length is \" + props.maxLength + \".\"\n      },\n      required: props.required ? \"This field is required.\" : false\n    },\n    name: props.name,\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), props.errors[props.name] != undefined && React.createElement(Text, {\n    style: styles.labelErr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, props.errors[props.name].message));\n});","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/utilities/Forms/TextInput.js"],"names":["React","Controller","styles","StyleSheet","create","label","color","marginTop","marginBottom","marginLeft","labelErr","fontSize","input","backgroundColor","borderColor","height","padding","borderRadius","inputContainer","forwardRef","props","ref","name","control","current","focus","onChange","onBlur","value","maxLength","message","required","errors","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,SAAS,EAAE,EAFN;AAGLC,IAAAA,YAAY,EAAE,CAHT;AAILC,IAAAA,UAAU,EAAE;AAJP,GADsB;AAO7BC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,KAAK,EAAE,KADC;AAERC,IAAAA,SAAS,EAAE,EAFH;AAGRI,IAAAA,QAAQ,EAAE;AAHF,GAPmB;AAY7BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,OADZ;AAELC,IAAAA,WAAW,EAAE,MAFR;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,YAAY,EAAE;AALT,GAZsB;AAmB7BC,EAAAA,cAAc,EAAE;AACdV,IAAAA,YAAY,EAAE;AADA;AAnBa,CAAlB,CAAf;AAyBA,eAAeR,KAAK,CAACmB,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5C,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACgB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Be,KAAK,CAACE,IAAlC,CADJ,EAEI,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACG,OADjB;AAEE,IAAA,OAAO,EAAE,mBAAI;AAACF,MAAAA,GAAG,CAACG,OAAJ,CAAYC,KAAZ;AAAoB,KAFpC;AAGE,IAAA,MAAM,EAAE;AAAA,UAAGC,QAAH,QAAGA,QAAH;AAAA,UAAaC,MAAb,QAAaA,MAAb;AAAA,UAAqBC,KAArB,QAAqBA,KAArB;AAAA,aACN,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE1B,MAAM,CAACU,KADhB;AAEE,QAAA,MAAM,EAAEe,MAFV;AAGE,QAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,iBAAIF,QAAQ,CAACE,KAAD,CAAZ;AAAA,SAHrB;AAIE,QAAA,KAAK,EAAEA,KAJT;AAKE,QAAA,GAAG,EAAEP,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;AAAA,KAHV;AAaE,IAAA,KAAK,EAAE;AACLQ,MAAAA,SAAS,EAAE;AACTD,QAAAA,KAAK,EAAER,KAAK,CAACS,SADJ;AAETC,QAAAA,OAAO,oCAAkCV,KAAK,CAACS,SAAxC;AAFE,OADN;AAKLE,MAAAA,QAAQ,EAAEX,KAAK,CAACW,QAAN,GAAiB,yBAAjB,GAA6C;AALlD,KAbT;AAoBE,IAAA,IAAI,EAAEX,KAAK,CAACE,IApBd;AAqBE,IAAA,YAAY,EAAC,EArBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EA0BMF,KAAK,CAACY,MAAN,CAAaZ,KAAK,CAACE,IAAnB,KAA4BW,SAA5B,IACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,KAAK,CAACY,MAAN,CAAaZ,KAAK,CAACE,IAAnB,EAAyBQ,OAD5B,CA3BR,CADJ;AAmCD,CApCY,CAAf","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, StyleSheet} from 'react-native';\nimport { Controller } from 'react-hook-form';\n\n\nconst styles = StyleSheet.create({\n    label: {\n      color: 'white',\n      marginTop: 10,\n      marginBottom: 5,\n      marginLeft: 0,\n    },\n    labelErr: {\n      color: 'red',\n      marginTop: 10,\n      fontSize: 14\n    },\n    input: {\n      backgroundColor: 'white',\n      borderColor: '#000',\n      height: 40,\n      padding: 10,\n      borderRadius: 4,\n    },\n    inputContainer: {\n      marginBottom: 10\n    }\n  });\n\n\nexport default React.forwardRef((props, ref) => {\n    return(\n        <View style={styles.inputContainer}>\n            <Text style={styles.label}>{props.name}</Text>\n            <Controller\n              control={props.control}\n              onFocus={()=>{ref.current.focus()}}\n              render={({ onChange, onBlur, value }) => (\n                <TextInput\n                  style={styles.input}\n                  onBlur={onBlur}\n                  onChangeText={value => onChange(value)}\n                  value={value}\n                  ref={ref}\n                />\n              )}\n\n              rules={{\n                maxLength: {\n                  value: props.maxLength,\n                  message: `This field maximum length is ${props.maxLength}.`\n                },\n                required: props.required ? \"This field is required.\" : false\n              }}\n              name={props.name}\n              defaultValue=\"\"\n            />\n            {\n              props.errors[props.name] != undefined &&\n                <Text style={styles.labelErr}>\n                  {props.errors[props.name].message}\n                </Text>\n            }\n          </View>\n\n    )\n  });"]},"metadata":{},"sourceType":"module"}