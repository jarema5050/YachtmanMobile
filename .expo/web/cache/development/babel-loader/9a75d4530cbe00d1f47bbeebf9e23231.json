{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Agent from \"./agent\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport url from 'url';\nimport AuthError from \"../auth/authError\";\nimport verifyToken from \"../jwt\";\nvar A0Auth0 = NativeModules.A0Auth0;\n\nvar callbackUri = function callbackUri(domain) {\n  var bundleIdentifier = A0Auth0.bundleIdentifier;\n  var lowerCasedIdentifier = bundleIdentifier.toLowerCase();\n\n  if (bundleIdentifier !== lowerCasedIdentifier) {\n    console.warn('The Bundle Identifier or Application ID of your app contains uppercase characters and will be lowercased to build the Callback URL. Check the Auth0 dashboard to whitelist the right URL value.');\n  }\n\n  return lowerCasedIdentifier + \"://\" + domain + \"/\" + Platform.OS + \"/\" + bundleIdentifier + \"/callback\";\n};\n\nvar WebAuth = function () {\n  function WebAuth(auth) {\n    _classCallCheck(this, WebAuth);\n\n    this.client = auth;\n    var baseUrl = auth.baseUrl,\n        clientId = auth.clientId,\n        domain = auth.domain;\n    this.domain = domain;\n    this.clientId = clientId;\n    this.agent = new Agent();\n  }\n\n  _createClass(WebAuth, [{\n    key: \"authorize\",\n    value: function authorize() {\n      var _this = this;\n\n      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var clientId = this.clientId,\n          domain = this.domain,\n          client = this.client,\n          agent = this.agent;\n      return agent.newTransaction().then(function (_ref) {\n        var state = _ref.state,\n            verifier = _ref.verifier,\n            defaults = _objectWithoutProperties(_ref, [\"state\", \"verifier\"]);\n\n        var redirectUri = callbackUri(domain);\n        var expectedState = parameters.state || state;\n\n        var query = _objectSpread(_objectSpread({}, defaults), {}, {\n          clientId: clientId,\n          responseType: 'code',\n          redirectUri: redirectUri,\n          state: expectedState\n        }, parameters);\n\n        var authorizeUrl = _this.client.authorizeUrl(query);\n\n        return agent.show(authorizeUrl, options.ephemeralSession).then(function (redirectUrl) {\n          if (!redirectUrl || !redirectUrl.startsWith(redirectUri)) {\n            throw new AuthError({\n              json: {\n                error: 'a0.redirect_uri.not_expected',\n                error_description: \"Expected \" + redirectUri + \" but got \" + redirectUrl\n              },\n              status: 0\n            });\n          }\n\n          var query = url.parse(redirectUrl, true).query;\n          var code = query.code,\n              resultState = query.state,\n              error = query.error;\n\n          if (error) {\n            throw new AuthError({\n              json: query,\n              status: 0\n            });\n          }\n\n          if (resultState !== expectedState) {\n            throw new AuthError({\n              json: {\n                error: 'a0.state.invalid',\n                error_description: \"Invalid state received in redirect url\"\n              },\n              status: 0\n            });\n          }\n\n          return client.exchange({\n            code: code,\n            verifier: verifier,\n            redirectUri: redirectUri\n          }).then(function (credentials) {\n            return verifyToken(credentials.idToken, {\n              domain: domain,\n              clientId: clientId,\n              nonce: parameters.nonce,\n              maxAge: parameters.max_age,\n              scope: parameters.scope,\n              leeway: options.leeway\n            }).then(function () {\n              return Promise.resolve(credentials);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"clearSession\",\n    value: function clearSession() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var client = this.client,\n          agent = this.agent,\n          domain = this.domain,\n          clientId = this.clientId;\n      options.clientId = clientId;\n      options.returnTo = callbackUri(domain);\n      options.federated = options.federated || false;\n      var logoutUrl = client.logoutUrl(options);\n      return agent.show(logoutUrl, false, true);\n    }\n  }]);\n\n  return WebAuth;\n}();\n\nexport { WebAuth as default };","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/node_modules/react-native-auth0/src/webauth/index.js"],"names":["Agent","url","AuthError","verifyToken","A0Auth0","NativeModules","callbackUri","domain","bundleIdentifier","lowerCasedIdentifier","toLowerCase","console","warn","Platform","OS","WebAuth","auth","client","baseUrl","clientId","agent","parameters","options","newTransaction","then","state","verifier","defaults","redirectUri","expectedState","query","responseType","authorizeUrl","show","ephemeralSession","redirectUrl","startsWith","json","error","error_description","status","parse","code","resultState","exchange","credentials","idToken","nonce","maxAge","max_age","scope","leeway","Promise","resolve","returnTo","federated","logoutUrl"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP;;;AAGA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;IAEOC,O,GAAWC,a,CAAXD,O;;AAEP,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM,EAAI;AAC5B,MAAMC,gBAAgB,GAAGJ,OAAO,CAACI,gBAAjC;AACA,MAAMC,oBAAoB,GAAGD,gBAAgB,CAACE,WAAjB,EAA7B;;AACA,MAAIF,gBAAgB,KAAKC,oBAAzB,EAA+C;AAC7CE,IAAAA,OAAO,CAACC,IAAR,CACE,iMADF;AAGD;;AACD,SAAUH,oBAAV,WAAoCF,MAApC,SAA8CM,QAAQ,CAACC,EAAvD,SAA6DN,gBAA7D;AACD,CATD;;IAqBqBO,O;AACnB,mBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,MAAL,GAAcD,IAAd;AADgB,QAETE,OAFS,GAEoBF,IAFpB,CAETE,OAFS;AAAA,QAEAC,QAFA,GAEoBH,IAFpB,CAEAG,QAFA;AAAA,QAEUZ,MAFV,GAEoBS,IAFpB,CAEUT,MAFV;AAGhB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKY,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAa,IAAIpB,KAAJ,EAAb;AACD;;;;gCAyBwC;AAAA;;AAAA,UAA/BqB,UAA+B,uEAAlB,EAAkB;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAAA,UAChCH,QADgC,GACG,IADH,CAChCA,QADgC;AAAA,UACtBZ,MADsB,GACG,IADH,CACtBA,MADsB;AAAA,UACdU,MADc,GACG,IADH,CACdA,MADc;AAAA,UACNG,KADM,GACG,IADH,CACNA,KADM;AAEvC,aAAOA,KAAK,CAACG,cAAN,GAAuBC,IAAvB,CAA4B,gBAAoC;AAAA,YAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,YAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,YAAdC,QAAc;;AACrE,YAAMC,WAAW,GAAGtB,WAAW,CAACC,MAAD,CAA/B;AACA,YAAMsB,aAAa,GAAGR,UAAU,CAACI,KAAX,IAAoBA,KAA1C;;AACA,YAAIK,KAAK,mCACJH,QADI;AAEPR,UAAAA,QAAQ,EAARA,QAFO;AAGPY,UAAAA,YAAY,EAAE,MAHP;AAIPH,UAAAA,WAAW,EAAXA,WAJO;AAKPH,UAAAA,KAAK,EAAEI;AALA,WAMJR,UANI,CAAT;;AAQA,YAAMW,YAAY,GAAG,KAAI,CAACf,MAAL,CAAYe,YAAZ,CAAyBF,KAAzB,CAArB;;AACA,eAAOV,KAAK,CACTa,IADI,CACCD,YADD,EACeV,OAAO,CAACY,gBADvB,EAEJV,IAFI,CAEC,UAAAW,WAAW,EAAI;AACnB,cAAI,CAACA,WAAD,IAAgB,CAACA,WAAW,CAACC,UAAZ,CAAuBR,WAAvB,CAArB,EAA0D;AACxD,kBAAM,IAAI1B,SAAJ,CAAc;AAClBmC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,KAAK,EAAE,8BADH;AAEJC,gBAAAA,iBAAiB,gBAAcX,WAAd,iBAAqCO;AAFlD,eADY;AAKlBK,cAAAA,MAAM,EAAE;AALU,aAAd,CAAN;AAOD;;AACD,cAAMV,KAAK,GAAG7B,GAAG,CAACwC,KAAJ,CAAUN,WAAV,EAAuB,IAAvB,EAA6BL,KAA3C;AAVmB,cAWZY,IAXY,GAWuBZ,KAXvB,CAWZY,IAXY;AAAA,cAWCC,WAXD,GAWuBb,KAXvB,CAWNL,KAXM;AAAA,cAWca,KAXd,GAWuBR,KAXvB,CAWcQ,KAXd;;AAYnB,cAAIA,KAAJ,EAAW;AACT,kBAAM,IAAIpC,SAAJ,CAAc;AAACmC,cAAAA,IAAI,EAAEP,KAAP;AAAcU,cAAAA,MAAM,EAAE;AAAtB,aAAd,CAAN;AACD;;AACD,cAAIG,WAAW,KAAKd,aAApB,EAAmC;AACjC,kBAAM,IAAI3B,SAAJ,CAAc;AAClBmC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,KAAK,EAAE,kBADH;AAEJC,gBAAAA,iBAAiB;AAFb,eADY;AAKlBC,cAAAA,MAAM,EAAE;AALU,aAAd,CAAN;AAOD;;AAED,iBAAOvB,MAAM,CACV2B,QADI,CACK;AAACF,YAAAA,IAAI,EAAJA,IAAD;AAAOhB,YAAAA,QAAQ,EAARA,QAAP;AAAiBE,YAAAA,WAAW,EAAXA;AAAjB,WADL,EAEJJ,IAFI,CAEC,UAAAqB,WAAW,EAAI;AACnB,mBAAO1C,WAAW,CAAC0C,WAAW,CAACC,OAAb,EAAsB;AACtCvC,cAAAA,MAAM,EAANA,MADsC;AAEtCY,cAAAA,QAAQ,EAARA,QAFsC;AAGtC4B,cAAAA,KAAK,EAAE1B,UAAU,CAAC0B,KAHoB;AAItCC,cAAAA,MAAM,EAAE3B,UAAU,CAAC4B,OAJmB;AAKtCC,cAAAA,KAAK,EAAE7B,UAAU,CAAC6B,KALoB;AAMtCC,cAAAA,MAAM,EAAE7B,OAAO,CAAC6B;AANsB,aAAtB,CAAX,CAOJ3B,IAPI,CAOC;AAAA,qBAAM4B,OAAO,CAACC,OAAR,CAAgBR,WAAhB,CAAN;AAAA,aAPD,CAAP;AAQD,WAXI,CAAP;AAYD,SAvCI,CAAP;AAwCD,OApDM,CAAP;AAqDD;;;mCAc0B;AAAA,UAAdvB,OAAc,uEAAJ,EAAI;AAAA,UAClBL,MADkB,GACiB,IADjB,CAClBA,MADkB;AAAA,UACVG,KADU,GACiB,IADjB,CACVA,KADU;AAAA,UACHb,MADG,GACiB,IADjB,CACHA,MADG;AAAA,UACKY,QADL,GACiB,IADjB,CACKA,QADL;AAEzBG,MAAAA,OAAO,CAACH,QAAR,GAAmBA,QAAnB;AACAG,MAAAA,OAAO,CAACgC,QAAR,GAAmBhD,WAAW,CAACC,MAAD,CAA9B;AACAe,MAAAA,OAAO,CAACiC,SAAR,GAAoBjC,OAAO,CAACiC,SAAR,IAAqB,KAAzC;AACA,UAAMC,SAAS,GAAGvC,MAAM,CAACuC,SAAP,CAAiBlC,OAAjB,CAAlB;AACA,aAAOF,KAAK,CAACa,IAAN,CAAWuB,SAAX,EAAsB,KAAtB,EAA6B,IAA7B,CAAP;AACD;;;;;;SA5GkBzC,O","sourcesContent":["import Agent from './agent';\nimport {NativeModules, Platform} from 'react-native';\n\nimport url from 'url';\nimport AuthError from '../auth/authError';\nimport verifyToken from '../jwt';\n\nconst {A0Auth0} = NativeModules;\n\nconst callbackUri = domain => {\n  const bundleIdentifier = A0Auth0.bundleIdentifier;\n  const lowerCasedIdentifier = bundleIdentifier.toLowerCase();\n  if (bundleIdentifier !== lowerCasedIdentifier) {\n    console.warn(\n      'The Bundle Identifier or Application ID of your app contains uppercase characters and will be lowercased to build the Callback URL. Check the Auth0 dashboard to whitelist the right URL value.',\n    );\n  }\n  return `${lowerCasedIdentifier}://${domain}/${Platform.OS}/${bundleIdentifier}/callback`;\n};\n\n/**\n * Helper to perform Auth against Auth0 hosted login page\n *\n * It will use `/authorize` endpoint of the Authorization Server (AS)\n * with Code Grant and Proof Key for Challenge Exchange (PKCE).\n *\n * @export\n * @class WebAuth\n * @see https://auth0.com/docs/api-auth/grant/authorization-code-pkce\n */\nexport default class WebAuth {\n  constructor(auth) {\n    this.client = auth;\n    const {baseUrl, clientId, domain} = auth;\n    this.domain = domain;\n    this.clientId = clientId;\n    this.agent = new Agent();\n  }\n\n  /**\n   * Starts the AuthN/AuthZ transaction against the AS in the in-app browser.\n   *\n   * In iOS it will use `SFSafariViewController` and in Android Chrome Custom Tabs.\n   *\n   * To learn more about how to customize the authorize call, check the Universal Login Page\n   * article at https://auth0.com/docs/hosted-pages/login\n   *\n   * @param {Object}  parameters Parameters to send on the AuthN/AuthZ request.\n   * @param {String}  [parameters.state] Random string to prevent CSRF attacks and used to discard unexepcted results. By default its a cryptographically secure random.\n   * @param {String}  [parameters.nonce] Random string to prevent replay attacks of id_tokens.\n   * @param {String}  [parameters.audience] Identifier of Resource Server (RS) to be included as audience (aud claim) of the issued access token\n   * @param {String}  [parameters.scope] Scopes requested for the issued tokens. e.g. `openid profile`\n   * @param {String}  [parameters.connection] The name of the identity provider to use, e.g. \"google-oauth2\" or \"facebook\". When not set, it will display Auth0's Universal Login Page.\n   * @param {Number}  [parameters.max_age] The allowable elapsed time in seconds since the last time the user was authenticated (optional).\n   * @param {Object}  options Other configuration options.\n   * @param {Number}  [options.leeway] The amount of leeway, in seconds, to accommodate potential clock skew when validating an ID token's claims. Defaults to 60 seconds if not specified.\n   * @param {Boolean} [options.ephemeralSession] Disable Single-Sign-On (SSO). It only affects iOS with versions 13 and above.\n   * @returns {Promise}\n   * @see https://auth0.com/docs/api/authentication#authorize-client\n   *\n   * @memberof WebAuth\n   */\n  authorize(parameters = {}, options = {}) {\n    const {clientId, domain, client, agent} = this;\n    return agent.newTransaction().then(({state, verifier, ...defaults}) => {\n      const redirectUri = callbackUri(domain);\n      const expectedState = parameters.state || state;\n      let query = {\n        ...defaults,\n        clientId,\n        responseType: 'code',\n        redirectUri,\n        state: expectedState,\n        ...parameters,\n      };\n      const authorizeUrl = this.client.authorizeUrl(query);\n      return agent\n        .show(authorizeUrl, options.ephemeralSession)\n        .then(redirectUrl => {\n          if (!redirectUrl || !redirectUrl.startsWith(redirectUri)) {\n            throw new AuthError({\n              json: {\n                error: 'a0.redirect_uri.not_expected',\n                error_description: `Expected ${redirectUri} but got ${redirectUrl}`,\n              },\n              status: 0,\n            });\n          }\n          const query = url.parse(redirectUrl, true).query;\n          const {code, state: resultState, error} = query;\n          if (error) {\n            throw new AuthError({json: query, status: 0});\n          }\n          if (resultState !== expectedState) {\n            throw new AuthError({\n              json: {\n                error: 'a0.state.invalid',\n                error_description: `Invalid state received in redirect url`,\n              },\n              status: 0,\n            });\n          }\n\n          return client\n            .exchange({code, verifier, redirectUri})\n            .then(credentials => {\n              return verifyToken(credentials.idToken, {\n                domain,\n                clientId,\n                nonce: parameters.nonce,\n                maxAge: parameters.max_age,\n                scope: parameters.scope,\n                leeway: options.leeway,\n              }).then(() => Promise.resolve(credentials));\n            });\n        });\n    });\n  }\n\n  /**\n   *  Removes Auth0 session and optionally remove the Identity Provider session.\n   *\n   *  In iOS it will use `SFSafariViewController` and in Android Chrome Custom Tabs.\n   *\n   * @param {Object} parameters Parameters to send\n   * @param {Bool} [parameters.federated] Optionally remove the IdP session.\n   * @returns {Promise}\n   * @see https://auth0.com/docs/logout\n   *\n   * @memberof WebAuth\n   */\n  clearSession(options = {}) {\n    const {client, agent, domain, clientId} = this;\n    options.clientId = clientId;\n    options.returnTo = callbackUri(domain);\n    options.federated = options.federated || false;\n    const logoutUrl = client.logoutUrl(options);\n    return agent.show(logoutUrl, false, true);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}