{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jedrzej/Documents/GitHub/YachtmanMobile/components/homeStack.js\";\nimport React, { useState } from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport BottomTabNav from \"./BottomTabNav\";\nimport DrawerNav from \"./DrawerNav\";\nimport IntroView from \"../views/IntroductionView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\n\nfunction homeStack() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showIntro = _useState2[0],\n      setShowIntro = _useState2[1];\n\n  function changeView() {\n    var getJwt = function getJwt() {\n      var jsonValue;\n      return _regeneratorRuntime.async(function getJwt$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@auth_jwt'));\n\n            case 3:\n              jsonValue = _context.sent;\n              return _context.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    getJwt().then(function (result) {\n      if (result == null) setShowIntro(true);else setShowIntro(false);\n    });\n  }\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(BottomTabNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }));\n}\n\nexport default homeStack;","map":{"version":3,"sources":["/Users/jedrzej/Documents/GitHub/YachtmanMobile/components/homeStack.js"],"names":["React","useState","AsyncStorage","BottomTabNav","DrawerNav","IntroView","NavigationContainer","homeStack","showIntro","setShowIntro","changeView","getJwt","getItem","jsonValue","JSON","parse","then","result"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;;;AAEA,SAASC,SAAT,GAAoB;AAAA,kBAEkBN,QAAQ,CAAC,IAAD,CAF1B;AAAA;AAAA,MAETO,SAFS;AAAA,MAEEC,YAFF;;AAGhB,WAASC,UAAT,GAAqB;AACjB,QAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEeT,YAAY,CAACU,OAAb,CAAqB,WAArB,CAFf;;AAAA;AAEHC,cAAAA,SAFG;AAAA,+CAGFA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAApB,GAA4C,IAH1C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;;AASAF,IAAAA,MAAM,GAAGK,IAAT,CAAc,UAACC,MAAD,EAAY;AACtB,UAAGA,MAAM,IAAI,IAAb,EACIR,YAAY,CAAC,IAAD,CAAZ,CADJ,KAGIA,YAAY,CAAC,KAAD,CAAZ;AACP,KALD;AAMH;;AAKK,SACA,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA;AAKT;;AAED,eAAeF,SAAf","sourcesContent":["\nimport React, {useState} from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport BottomTabNav from './BottomTabNav';\nimport DrawerNav from './DrawerNav';\nimport IntroView from '../views/IntroductionView';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { View } from 'react-native';\nfunction homeStack(){\n\n    const [showIntro, setShowIntro] = useState(true);\n    function changeView(){\n        const getJwt = async () => {\n            try {\n              const jsonValue = await AsyncStorage.getItem('@auth_jwt')\n              return jsonValue != null ? JSON.parse(jsonValue) : null;\n            } catch(e) {\n              // error reading value\n            }\n          }\n    \n        getJwt().then((result) => {\n            if(result == null)\n                setShowIntro(true);\n            else\n                setShowIntro(false);\n        })\n    }\n    /*\n    if(showIntro)\n        return(<IntroView task={changeView}></IntroView>);\n    else\n    */    return(\n          <NavigationContainer>\n              <BottomTabNav></BottomTabNav>\n            </NavigationContainer>\n        );\n}\n\nexport default homeStack;"]},"metadata":{},"sourceType":"module"}