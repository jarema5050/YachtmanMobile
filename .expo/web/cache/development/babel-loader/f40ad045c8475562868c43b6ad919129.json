{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/services/Authentication.js\";\nimport * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport auth0 from \"../services/Auth0\";\n\nvar credentialsModule = require(\"./AuthCredentials\");\n\nvar webAuth = auth0.webAuth;\nvar auth0ClientId = credentialsModule.auth0ClientId;\nvar authorizationEndpoint = credentialsModule.domain + \"/authorize\";\nvar useProxy = Platform.select({\n  web: false,\n  default: true\n});\nvar redirectUri = AuthSession.makeRedirectUri({\n  useProxy: useProxy\n});\nexport default function Authentication(_ref) {\n  var buttonParams = _ref.buttonParams,\n      task = _ref.task;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _AuthSession$useAuthR = AuthSession.useAuthRequest({\n    redirectUri: redirectUri,\n    clientId: auth0ClientId,\n    responseType: \"token\",\n    scopes: [\"openid\", \"profile\", \"email\"],\n    extraParams: {\n      nonce: \"nonce\"\n    }\n  }, {\n    authorizationEndpoint: authorizationEndpoint\n  }),\n      _AuthSession$useAuthR2 = _slicedToArray(_AuthSession$useAuthR, 3),\n      request = _AuthSession$useAuthR2[0],\n      result = _AuthSession$useAuthR2[1],\n      promptAsync = _AuthSession$useAuthR2[2];\n\n  console.log(\"Redirect URL: \" + redirectUri);\n\n  var storeUserData = function storeUserData(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@user_data', jsonValue));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Storing encoded data failed -\" + _context.t0.message);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var storeToken = function storeToken(value) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function storeToken$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@auth_token', jsonValue));\n\n          case 4:\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Storing JWT token failed -\" + _context2.t0.message);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var fetchUserData = function fetchUserData(authToken) {\n    var userData;\n    return _regeneratorRuntime.async(function fetchUserData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(webAuth.client.userInfo({\n              token: authToken\n            }, function (err) {\n              console.log(\"userInfo \" + err.message);\n            }));\n\n          case 2:\n            userData = _context3.sent;\n\n            if (userData != null) {\n              console.log(userData);\n              storeUserData(userData);\n              setName(userData.givenName);\n              task();\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    if (result) {\n      console.log(result);\n\n      if (result.error) {\n        Alert.alert(\"Authentication error\", result.params.error_description || \"something went wrong\");\n        return;\n      }\n\n      if (result.type === \"success\") {\n        var authToken = result.params.access_token;\n        storeToken(authToken);\n        fetchUserData(authToken);\n      }\n    }\n  }, [result]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, name ? React.createElement(Text, {\n    style: styles.containerBottom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"You are logged in, \", name, \"!\") : React.createElement(Button, {\n    disabled: !request,\n    buttonStyle: buttonParams.styleBtnBody,\n    titleStyle: buttonParams.styleBtnTitle,\n    title: buttonParams.titleTxt,\n    onPress: function onPress() {\n      return promptAsync({\n        useProxy: useProxy\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["/Users/sokolowski/Documents/Private Repositories/YachtmanMobile/services/Authentication.js"],"names":["AuthSession","jwtDecode","React","useState","Button","AsyncStorage","auth0","credentialsModule","require","webAuth","auth0ClientId","authorizationEndpoint","domain","useProxy","Platform","select","web","default","redirectUri","makeRedirectUri","Authentication","buttonParams","task","name","setName","useAuthRequest","clientId","responseType","scopes","extraParams","nonce","request","result","promptAsync","console","log","storeUserData","value","jsonValue","JSON","stringify","setItem","message","storeToken","fetchUserData","authToken","client","userInfo","token","err","userData","givenName","useEffect","error","Alert","alert","params","error_description","type","access_token","styles","containerBottom","styleBtnBody","styleBtnTitle","titleTxt","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","title","fontSize","textAlign","marginTop"],"mappings":"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","sourcesContent":["import * as AuthSession from \"expo-auth-session\";\nimport jwtDecode from \"jwt-decode\";\nimport React, { useState } from \"react\";\nimport { Alert, Platform, StyleSheet, Text, View } from \"react-native\";\nimport { Button } from 'react-native-elements';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport auth0 from '../services/Auth0'\n// You need to swap out the Auth0 client id and domain with the one from your Auth0 client.\n// In your Auth0 client, you need to also add a url to your authorized redirect urls.\n//\n// For this application, I added https://auth.expo.io/@arielweinberger/with-auth0 because I am\n// signed in as the \"arielweinberger\" account on Expo and the name/slug for this app is \"with-auth0\".\n//\n// You can open this app in the Expo client and check your logs to find out your redirect URL.\nconst credentialsModule = require('./AuthCredentials');\nconst webAuth = auth0.webAuth;\nconst auth0ClientId = credentialsModule.auth0ClientId;\nconst authorizationEndpoint = credentialsModule.domain + \"/authorize\";\n\nconst useProxy = Platform.select({ web: false, default: true });\nconst redirectUri = AuthSession.makeRedirectUri({ useProxy });\n\nexport default function Authentication({buttonParams, task}) {\n  const [name, setName] = React.useState(null);\n\n  const [request, result, promptAsync] = AuthSession.useAuthRequest(\n    {\n      redirectUri,\n      clientId: auth0ClientId,\n      // id_token will return a JWT token\n      responseType: \"token\",\n      // retrieve the user's profile\n      scopes: [\"openid\", \"profile\", \"email\"],\n      extraParams: {\n        // ideally, this will be a random value\n        nonce: \"nonce\",\n      },\n    },\n    { authorizationEndpoint }\n  );\n\n  // Retrieve the redirect URL, add this to the callback URL list\n  // of your Auth0 application.\n  console.log(`Redirect URL: ${redirectUri}`);\n\n  const storeUserData = async (value) => {\n    try {\n      const jsonValue = JSON.stringify(value)\n      await AsyncStorage.setItem('@user_data', jsonValue)\n    } catch (e) {\n      console.log(\"Storing encoded data failed -\"+e.message)\n    }\n  }\n  const storeToken = async (value) => {\n    try {\n      const jsonValue = JSON.stringify(value)\n      await AsyncStorage.setItem('@auth_token', jsonValue)\n    } catch (e) {\n      console.log(\"Storing JWT token failed -\"+e.message)\n    }\n  }\n  const fetchUserData = async (authToken) => {\n    const userData = await webAuth.client.userInfo({token:authToken}, function(err) {\n      console.log(\"userInfo \" + err.message)\n    });\n    if (userData != null){\n      console.log(userData)\n      storeUserData(userData)\n      setName(userData.givenName)\n      task()\n    }  \n  } \n  React.useEffect(() => {\n    if (result) {\n      console.log(result)\n      if (result.error) {\n        Alert.alert(\n          \"Authentication error\",\n          result.params.error_description || \"something went wrong\"\n        );\n        return;\n      }\n      if (result.type === \"success\") {\n        const authToken = result.params.access_token\n        storeToken(authToken)\n        fetchUserData(authToken)\n      }\n    }\n  }, [result]);\n\n  return (\n    <View>\n      {name ? (\n        <Text style={styles.containerBottom}>You are logged in, {name}!</Text>\n      ) : (\n        <Button\n          disabled={!request}\n          buttonStyle ={buttonParams.styleBtnBody}\n          titleStyle = {buttonParams.styleBtnTitle}\n          title= {buttonParams.titleTxt}\n          onPress={() => promptAsync({ useProxy })}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    textAlign: \"center\",\n    marginTop: 40,\n  },\n});"]},"metadata":{},"sourceType":"module"}